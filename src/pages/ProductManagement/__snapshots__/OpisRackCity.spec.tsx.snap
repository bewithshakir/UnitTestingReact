// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering of opis rack segment should render snapshot for opis rack segment 1`] = `
<QueryClientProvider
  client={
    QueryClient {
      "defaultOptions": Object {},
      "mutationCache": MutationCache {
        "config": Object {},
        "listeners": Array [],
        "mutationId": 0,
        "mutations": Array [],
      },
      "mutationDefaults": Array [],
      "queryCache": QueryCache {
        "config": Object {},
        "listeners": Array [],
        "queries": Array [
          Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getServedCities\\"]",
                  "queryKey": "getServedCities",
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getServedCities\\"]",
                  "queryKey": "getServedCities",
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getServedCities\\"]",
              "queryKey": "getServedCities",
            },
            "promise": Promise {},
            "queryHash": "[\\"getServedCities\\"]",
            "queryKey": "getServedCities",
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
                  "queryKey": Array [
                    "getSupplierBrandProducts",
                    "",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
                  "queryKey": Array [
                    "getSupplierBrandProducts",
                    "",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
              "queryKey": Array [
                "getSupplierBrandProducts",
                "",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
            "queryKey": Array [
              "getSupplierBrandProducts",
              "",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
                  "queryKey": Array [
                    "getSupplierPrices",
                    Object {
                      "actualProduct": Array [],
                      "brandIndicator": Array [],
                      "cityId": undefined,
                      "supplier": Array [],
                    },
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
                  "queryKey": Array [
                    "getSupplierPrices",
                    Object {
                      "actualProduct": Array [],
                      "brandIndicator": Array [],
                      "cityId": undefined,
                      "supplier": Array [],
                    },
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
              "queryKey": Array [
                "getSupplierPrices",
                Object {
                  "actualProduct": Array [],
                  "brandIndicator": Array [],
                  "cityId": undefined,
                  "supplier": Array [],
                },
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
            "queryKey": Array [
              "getSupplierPrices",
              Object {
                "actualProduct": Array [],
                "brandIndicator": Array [],
                "cityId": undefined,
                "supplier": Array [],
              },
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
        ],
        "queriesMap": Object {
          "[\\"getServedCities\\"]": Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getServedCities\\"]",
                  "queryKey": "getServedCities",
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getServedCities\\"]",
                  "queryKey": "getServedCities",
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getServedCities\\"]",
              "queryKey": "getServedCities",
            },
            "promise": Promise {},
            "queryHash": "[\\"getServedCities\\"]",
            "queryKey": "getServedCities",
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          "[\\"getSupplierBrandProducts\\",\\"\\"]": Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
                  "queryKey": Array [
                    "getSupplierBrandProducts",
                    "",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
                  "queryKey": Array [
                    "getSupplierBrandProducts",
                    "",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
              "queryKey": Array [
                "getSupplierBrandProducts",
                "",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getSupplierBrandProducts\\",\\"\\"]",
            "queryKey": Array [
              "getSupplierBrandProducts",
              "",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]": Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
                  "queryKey": Array [
                    "getSupplierPrices",
                    Object {
                      "actualProduct": Array [],
                      "brandIndicator": Array [],
                      "cityId": undefined,
                      "supplier": Array [],
                    },
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
                  "queryKey": Array [
                    "getSupplierPrices",
                    Object {
                      "actualProduct": Array [],
                      "brandIndicator": Array [],
                      "cityId": undefined,
                      "supplier": Array [],
                    },
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
              "queryKey": Array [
                "getSupplierPrices",
                Object {
                  "actualProduct": Array [],
                  "brandIndicator": Array [],
                  "cityId": undefined,
                  "supplier": Array [],
                },
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getSupplierPrices\\",{\\"actualProduct\\":[],\\"brandIndicator\\":[],\\"supplier\\":[]}]",
            "queryKey": Array [
              "getSupplierPrices",
              Object {
                "actualProduct": Array [],
                "brandIndicator": Array [],
                "cityId": undefined,
                "supplier": Array [],
              },
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
        },
      },
      "queryDefaults": Array [],
      "unsubscribeFocus": [Function],
      "unsubscribeOnline": [Function],
    }
  }
>
   
  <OpisRackCity
    editMode={false}
    formik={
      Object {
        "error": "",
        "getFieldProps": [MockFunction] {
          "calls": Array [
            Array [
              "state",
            ],
            Array [
              "cityId",
            ],
            Array [
              "opisName",
            ],
            Array [
              "productNm",
            ],
            Array [
              "state",
            ],
            Array [
              "cityId",
            ],
            Array [
              "opisName",
            ],
            Array [
              "productNm",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "initialError": "",
        "initialTouched": false,
        "initialValue": "",
        "setFieldValue": [MockFunction],
        "touched": false,
        "values": Object {
          "actualProduct": Array [],
          "addedPriceAmt": 0,
          "branded": Array [],
          "city": "",
          "cityId": "",
          "discountPriceAmt": 0,
          "manualPriceAmt": 0,
          "masterProductName": Object {
            "label": "",
            "value": "",
          },
          "opisName": "",
          "pricingModel": Object {
            "label": "",
            "value": "",
          },
          "productNm": "",
          "productType": Object {
            "label": "",
            "value": "",
          },
          "state": "",
          "supplier": Array [],
          "supplierPrice": 0,
          "taxExemption": Array [],
        },
      }
    }
    isDisabled={false}
    isSaveCancelShown={false}
    productId="abc"
    setSupplierPrice={[MockFunction]}
  >
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": Array [
              <div>
                disabled 
                false
                editMode 
                false
              </div>,
              <SingleSelect
                error={false}
                id="city"
                isDisabled={false}
                items={Array []}
                label="addProductFormLabels.citylabel"
                name="city"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Select one"
                required={true}
                value=""
              />,
            ],
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <div>
            disabled 
            false
            editMode 
            false
          </div>
          <SingleSelect
            error={false}
            id="city"
            isDisabled={false}
            items={Array []}
            label="addProductFormLabels.citylabel"
            name="city"
            onBlur={[Function]}
            onChange={[Function]}
            placeholder="Select one"
            required={true}
            value=""
          >
            <ForwardRef(FormControl)
              className="select"
            >
              <MuiFormControlRoot
                as="div"
                className="MuiFormControl-root select"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(InputLabel)
                        aria-labelledby="addProductFormLabels.citylabel"
                        aria-required={true}
                        htmlFor="city"
                        shrink={true}
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <b>
                          ADDPRODUCTFORMLABELS.CITYLABEL
                          <span
                            className="super"
                          >
                            * 
                          </span>
                        </b>
                      </ForwardRef(InputLabel)>,
                      <ForwardRef
                        className="react-select-container"
                        classNamePrefix="react-select"
                        components={
                          Object {
                            "DropdownIndicator": [Function],
                            "IndicatorSeparator": [Function],
                            "Option": [Function],
                            "SingleValue": [Function],
                          }
                        }
                        inputId="city"
                        isDisabled={false}
                        isSearchable={false}
                        name="city"
                        onBlur={[Function]}
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Select one"
                        value=""
                      />,
                      undefined,
                    ],
                    "className": "select",
                    "color": "primary",
                    "component": "div",
                    "disabled": false,
                    "error": false,
                    "fullWidth": false,
                    "hiddenLabel": false,
                    "margin": "none",
                    "required": false,
                    "size": "medium",
                    "variant": "outlined",
                  }
                }
              >
                <div
                  className="MuiFormControl-root select css-1nrlq1o-MuiFormControl-root"
                >
                  <ForwardRef(InputLabel)
                    aria-labelledby="addProductFormLabels.citylabel"
                    aria-required={true}
                    htmlFor="city"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <MuiInputLabelRoot
                      aria-labelledby="addProductFormLabels.citylabel"
                      aria-required={true}
                      classes={
                        Object {
                          "asterisk": "",
                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                        }
                      }
                      data-shrink={true}
                      htmlFor="city"
                      ownerState={
                        Object {
                          "aria-labelledby": "addProductFormLabels.citylabel",
                          "aria-required": true,
                          "children": <b>
                            ADDPRODUCTFORMLABELS.CITYLABEL
                            <span
                              className="super"
                            >
                              * 
                            </span>
                          </b>,
                          "disableAnimation": false,
                          "formControl": Object {
                            "adornedStart": false,
                            "color": "primary",
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "fullWidth": false,
                            "hiddenLabel": false,
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "registerEffect": [Function],
                            "required": false,
                            "setAdornedStart": [Function],
                            "size": "medium",
                            "variant": "outlined",
                          },
                          "htmlFor": "city",
                          "required": false,
                          "shrink": true,
                          "size": "medium",
                          "style": Object {
                            "color": "var(--Darkgray)",
                          },
                          "variant": "outlined",
                        }
                      }
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <ForwardRef(FormLabel)
                        aria-labelledby="addProductFormLabels.citylabel"
                        aria-required={true}
                        className="css-1bzvmy4-MuiInputLabel-root"
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={true}
                        htmlFor="city"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <MuiFormLabelRoot
                          aria-labelledby="addProductFormLabels.citylabel"
                          aria-required={true}
                          as="label"
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1bzvmy4-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={true}
                          htmlFor="city"
                          ownerState={
                            Object {
                              "aria-labelledby": "addProductFormLabels.citylabel",
                              "aria-required": true,
                              "children": <b>
                                ADDPRODUCTFORMLABELS.CITYLABEL
                                <span
                                  className="super"
                                >
                                  * 
                                </span>
                              </b>,
                              "className": "css-1bzvmy4-MuiInputLabel-root",
                              "classes": Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                              },
                              "color": "primary",
                              "component": "label",
                              "data-shrink": true,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "htmlFor": "city",
                              "required": false,
                              "style": Object {
                                "color": "var(--Darkgray)",
                              },
                            }
                          }
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.citylabel"
                            aria-required={true}
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1kty9di-MuiFormLabel-root-MuiInputLabel-root"
                            data-shrink={true}
                            htmlFor="city"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.CITYLABEL
                              <span
                                className="super"
                              >
                                * 
                              </span>
                            </b>
                          </label>
                        </MuiFormLabelRoot>
                      </ForwardRef(FormLabel)>
                    </MuiInputLabelRoot>
                  </ForwardRef(InputLabel)>
                  <ForwardRef
                    className="react-select-container"
                    classNamePrefix="react-select"
                    components={
                      Object {
                        "DropdownIndicator": [Function],
                        "IndicatorSeparator": [Function],
                        "Option": [Function],
                        "SingleValue": [Function],
                      }
                    }
                    inputId="city"
                    isDisabled={false}
                    isSearchable={false}
                    name="city"
                    onBlur={[Function]}
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select one"
                    value=""
                  >
                    <Select
                      aria-live="polite"
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="react-select-container"
                      classNamePrefix="react-select"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={true}
                      components={
                        Object {
                          "DropdownIndicator": [Function],
                          "IndicatorSeparator": [Function],
                          "Option": [Function],
                          "SingleValue": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      escapeClearsValue={false}
                      filterOption={[Function]}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputId="city"
                      inputValue=""
                      isDisabled={false}
                      isLoading={false}
                      isMulti={false}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={false}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      name="city"
                      noOptionsMessage={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={Array []}
                      pageSize={5}
                      placeholder="Select one"
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={0}
                      tabSelectsValue={true}
                      value=""
                    >
                      <SelectContainer
                        className="react-select-container"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={false}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={false}
                        isRtl={false}
                        options={Array []}
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "aria-live": "polite",
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "react-select-container",
                            "classNamePrefix": "react-select",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": true,
                            "components": Object {
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "Option": [Function],
                              "SingleValue": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "escapeClearsValue": false,
                            "filterOption": [Function],
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "inputId": "city",
                            "inputValue": "",
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": false,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": false,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "name": "city",
                            "noOptionsMessage": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [],
                            "pageSize": 5,
                            "placeholder": "Select one",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": 0,
                            "tabSelectsValue": true,
                            "value": "",
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="react-select-container"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": undefined,
                              "label": "container",
                              "pointerEvents": undefined,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="react-select-container css-b62m3t-container"
                            onKeyDown={[Function]}
                          >
                            <LiveRegion
                              ariaSelection={null}
                              clearValue={[Function]}
                              cx={[Function]}
                              focusableOptions={Array []}
                              focusedValue={null}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              id="react-select-2-live-region"
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "react-select-container",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "Option": [Function],
                                    "SingleValue": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputId": "city",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "city",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Select one",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": "",
                                }
                              }
                              selectValue={Array []}
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <A11yText
                                id="react-select-2-live-region"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                  id="react-select-2-live-region"
                                >
                                  <span
                                    className="css-1f43avz-a11yText-A11yText"
                                    id="react-select-2-live-region"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                              <A11yText
                                aria-atomic="false"
                                aria-live="polite"
                                aria-relevant="additions text"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  aria-atomic="false"
                                  aria-live="polite"
                                  aria-relevant="additions text"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                >
                                  <span
                                    aria-atomic="false"
                                    aria-live="polite"
                                    aria-relevant="additions text"
                                    className="css-1f43avz-a11yText-A11yText"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                            </LiveRegion>
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              menuIsOpen={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "react-select-container",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "Option": [Function],
                                    "SingleValue": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputId": "city",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "city",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Select one",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": "",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="react-select__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": undefined,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="react-select__control css-1s2u09g-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "react-select-container",
                                        "classNamePrefix": "react-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "Option": [Function],
                                          "SingleValue": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "inputId": "city",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "city",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "Select one",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": "",
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="react-select__value-container"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "grid",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="react-select__value-container css-319lph-ValueContainer"
                                      >
                                        <Placeholder
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "id": "react-select-2-placeholder",
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          key="placeholder"
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "react-select-container",
                                              "classNamePrefix": "react-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "Option": [Function],
                                                "SingleValue": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "inputId": "city",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "city",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "Select one",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": "",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="react-select__placeholder"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 50%)",
                                                "gridArea": "1 / 1 / 2 / 3",
                                                "label": "placeholder",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                              }
                                            }
                                            id="react-select-2-placeholder"
                                          >
                                            <div
                                              className="react-select__placeholder css-14el2xx-placeholder"
                                              id="react-select-2-placeholder"
                                            >
                                              Select one
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Placeholder>
                                        <DummyInput
                                          aria-autocomplete="list"
                                          aria-controls="react-select-2-listbox"
                                          aria-describedby="react-select-2-placeholder"
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          aria-owns="react-select-2-listbox"
                                          aria-readonly={true}
                                          disabled={false}
                                          id="city"
                                          innerRef={[Function]}
                                          inputMode="none"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          role="combobox"
                                          tabIndex={0}
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DummyInput"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="input"
                                            aria-autocomplete="list"
                                            aria-controls="react-select-2-listbox"
                                            aria-describedby="react-select-2-placeholder"
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            aria-owns="react-select-2-listbox"
                                            aria-readonly={true}
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNNIiwiZmlsZSI6IkR1bW15SW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIHJlZj17aW5uZXJSZWZ9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */",
                                                "name": "mohuvp-dummyInput-DummyInput",
                                                "next": undefined,
                                                "styles": "label:dummyInput;background:0;border:0;caret-color:transparent;font-size:inherit;grid-area:1 / 1 / 2 / 3;outline:0;padding:0;width:1px;color:transparent;left:-100px;opacity:0;position:relative;transform:scale(.01);;label:DummyInput;",
                                                "toString": [Function],
                                              }
                                            }
                                            disabled={false}
                                            id="city"
                                            inputMode="none"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="combobox"
                                            tabIndex={0}
                                            value=""
                                          >
                                            <input
                                              aria-autocomplete="list"
                                              aria-controls="react-select-2-listbox"
                                              aria-describedby="react-select-2-placeholder"
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              aria-owns="react-select-2-listbox"
                                              aria-readonly={true}
                                              className="css-mohuvp-dummyInput-DummyInput"
                                              disabled={false}
                                              id="city"
                                              inputMode="none"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="combobox"
                                              tabIndex={0}
                                              value=""
                                            />
                                          </EmotionCssPropInternal>
                                        </DummyInput>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "react-select-container",
                                        "classNamePrefix": "react-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "Option": [Function],
                                          "SingleValue": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "inputId": "city",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "city",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "Select one",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": "",
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="react-select__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="react-select__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "react-select-container",
                                              "classNamePrefix": "react-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "Option": [Function],
                                                "SingleValue": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "inputId": "city",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "city",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "Select one",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": "",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "react-select-container",
                                              "classNamePrefix": "react-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "Option": [Function],
                                                "SingleValue": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "inputId": "city",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "city",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "Select one",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": "",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <DropdownIndicator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={false}
                                            innerProps={
                                              Object {
                                                "aria-hidden": "true",
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "react-select-container",
                                                "classNamePrefix": "react-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "Option": [Function],
                                                  "SingleValue": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "inputId": "city",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "city",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select one",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": "",
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              aria-hidden="true"
                                              className="react-select__indicator react-select__dropdown-indicator"
                                              css={
                                                Object {
                                                  ":hover": Object {
                                                    "color": "hsl(0, 0%, 60%)",
                                                  },
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 80%)",
                                                  "display": "flex",
                                                  "label": "indicatorContainer",
                                                  "padding": 8,
                                                  "transition": "color 150ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                aria-hidden="true"
                                                className="react-select__indicator react-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <ArrowDown>
                                                  <svg
                                                    height="1em"
                                                    viewBox="0 0 20 20"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="m1.742 5 8.628 7.844 7.821-7.812 1.413 1.418-9.17 9.159L.396 6.48Z"
                                                      fill="var(--Gray)"
                                                    />
                                                    <path
                                                      d="M0 0h20v20H0z"
                                                      fill="none"
                                                    />
                                                  </svg>
                                                </ArrowDown>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </DropdownIndicator>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                            <input
                              name="city"
                              type="hidden"
                              value=""
                            />
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </ForwardRef>
                </div>
              </MuiFormControlRoot>
            </ForwardRef(FormControl)>
          </SingleSelect>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        />
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <Input
              autoComplete="new-password"
              description=""
              disabled={true}
              error={false}
              id="state"
              label="addProductFormLabels.statelabel"
              name="state"
              onClick={[Function]}
              required={true}
              type="text"
              width="100%"
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <Input
            autoComplete="new-password"
            description=""
            disabled={true}
            error={false}
            id="state"
            label="addProductFormLabels.statelabel"
            name="state"
            onClick={[Function]}
            required={true}
            type="text"
            width="100%"
          >
            <WithStyles(ForwardRef(FormControl))
              className="formInput"
            >
              <ForwardRef(FormControl)
                className="formInput"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
              >
                <div
                  className="MuiFormControl-root formInput"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    aria-labelledby="addProductFormLabels.statelabel"
                    aria-required={true}
                    htmlFor="state"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <ForwardRef(InputLabel)
                      aria-labelledby="addProductFormLabels.statelabel"
                      aria-required={true}
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="state"
                      shrink={true}
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        aria-labelledby="addProductFormLabels.statelabel"
                        aria-required={true}
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={true}
                        htmlFor="state"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <ForwardRef(FormLabel)
                          aria-labelledby="addProductFormLabels.statelabel"
                          aria-required={true}
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={true}
                          htmlFor="state"
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.statelabel"
                            aria-required={true}
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                            data-shrink={true}
                            htmlFor="state"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.STATELABEL
                              <span
                                className="super"
                              >
                                *
                              </span>
                            </b>
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(InputBase))
                    aria-describedby=""
                    aria-required={true}
                    autoComplete="new-password"
                    disabled={true}
                    error={false}
                    id="state"
                    name="state"
                    onClick={[Function]}
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                    type="text"
                  >
                    <ForwardRef(InputBase)
                      aria-describedby=""
                      aria-required={true}
                      autoComplete="new-password"
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense",
                          "multiline": "MuiInputBase-multiline",
                          "root": "MuiInputBase-root",
                        }
                      }
                      disabled={true}
                      error={false}
                      id="state"
                      name="state"
                      onClick={[Function]}
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                      type="text"
                    >
                      <div
                        aria-required={true}
                        className="MuiInputBase-root Mui-disabled MuiInputBase-formControl"
                        onClick={[Function]}
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <input
                          aria-describedby=""
                          aria-invalid={false}
                          autoComplete="new-password"
                          className="MuiInputBase-input Mui-disabled"
                          disabled={true}
                          id="state"
                          name="state"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="text"
                        />
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </Input>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <Input
              autoComplete="new-password"
              description=""
              disabled={true}
              error={false}
              id="cityId"
              label="addProductFormLabels.cityidlabel"
              required={true}
              type="text"
              width="100%"
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <Input
            autoComplete="new-password"
            description=""
            disabled={true}
            error={false}
            id="cityId"
            label="addProductFormLabels.cityidlabel"
            required={true}
            type="text"
            width="100%"
          >
            <WithStyles(ForwardRef(FormControl))
              className="formInput"
            >
              <ForwardRef(FormControl)
                className="formInput"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
              >
                <div
                  className="MuiFormControl-root formInput"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    aria-labelledby="addProductFormLabels.cityidlabel"
                    aria-required={true}
                    htmlFor="cityId"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <ForwardRef(InputLabel)
                      aria-labelledby="addProductFormLabels.cityidlabel"
                      aria-required={true}
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="cityId"
                      shrink={true}
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        aria-labelledby="addProductFormLabels.cityidlabel"
                        aria-required={true}
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={true}
                        htmlFor="cityId"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <ForwardRef(FormLabel)
                          aria-labelledby="addProductFormLabels.cityidlabel"
                          aria-required={true}
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={true}
                          htmlFor="cityId"
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.cityidlabel"
                            aria-required={true}
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                            data-shrink={true}
                            htmlFor="cityId"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.CITYIDLABEL
                              <span
                                className="super"
                              >
                                *
                              </span>
                            </b>
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(InputBase))
                    aria-describedby=""
                    aria-required={true}
                    autoComplete="new-password"
                    disabled={true}
                    error={false}
                    id="cityId"
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                    type="text"
                  >
                    <ForwardRef(InputBase)
                      aria-describedby=""
                      aria-required={true}
                      autoComplete="new-password"
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense",
                          "multiline": "MuiInputBase-multiline",
                          "root": "MuiInputBase-root",
                        }
                      }
                      disabled={true}
                      error={false}
                      id="cityId"
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                      type="text"
                    >
                      <div
                        aria-required={true}
                        className="MuiInputBase-root Mui-disabled MuiInputBase-formControl"
                        onClick={[Function]}
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <input
                          aria-describedby=""
                          aria-invalid={false}
                          autoComplete="new-password"
                          className="MuiInputBase-input Mui-disabled"
                          disabled={true}
                          id="cityId"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="text"
                        />
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </Input>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <MultiSelect
              disabled={false}
              error={false}
              id="supplier"
              items={Array []}
              label="addProductFormLabels.supplierlabel"
              loadingMessage="Loading..."
              name="supplier"
              noOptionsMessage="No Options found"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="addProductFormLabels.supplierplaceholder"
              required={true}
              value={Array []}
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <MultiSelect
            disabled={false}
            error={false}
            id="supplier"
            items={Array []}
            label="addProductFormLabels.supplierlabel"
            loadingMessage="Loading..."
            name="supplier"
            noOptionsMessage="No Options found"
            onBlur={[Function]}
            onChange={[Function]}
            placeholder="addProductFormLabels.supplierplaceholder"
            required={true}
            value={Array []}
          >
            <ForwardRef(FormControl)
              className="select"
            >
              <MuiFormControlRoot
                as="div"
                className="MuiFormControl-root select"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(InputLabel)
                        aria-labelledby="addProductFormLabels.supplierlabel"
                        aria-required={true}
                        htmlFor="supplier"
                        shrink={true}
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <b>
                          ADDPRODUCTFORMLABELS.SUPPLIERLABEL
                          <span
                            className="super"
                          >
                            * 
                          </span>
                        </b>
                      </ForwardRef(InputLabel)>,
                      <ForwardRef
                        className="multi-select-container"
                        classNamePrefix="multi-select"
                        closeMenuOnSelect={false}
                        components={
                          Object {
                            "ClearIndicator": [Function],
                            "DropdownIndicator": [Function],
                            "IndicatorSeparator": [Function],
                            "MultiValue": [Function],
                            "Option": [Function],
                          }
                        }
                        hideSelectedOptions={false}
                        inputId="supplier"
                        isDisabled={false}
                        isMulti={true}
                        isSearchable={false}
                        loadingMessage={[Function]}
                        name="supplier"
                        noOptionsMessage={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        options={Array []}
                        placeholder="addProductFormLabels.supplierplaceholder"
                        value={Array []}
                      />,
                      undefined,
                    ],
                    "className": "select",
                    "color": "primary",
                    "component": "div",
                    "disabled": false,
                    "error": false,
                    "fullWidth": false,
                    "hiddenLabel": false,
                    "margin": "none",
                    "required": false,
                    "size": "medium",
                    "variant": "outlined",
                  }
                }
              >
                <div
                  className="MuiFormControl-root select css-1nrlq1o-MuiFormControl-root"
                >
                  <ForwardRef(InputLabel)
                    aria-labelledby="addProductFormLabels.supplierlabel"
                    aria-required={true}
                    htmlFor="supplier"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <MuiInputLabelRoot
                      aria-labelledby="addProductFormLabels.supplierlabel"
                      aria-required={true}
                      classes={
                        Object {
                          "asterisk": "",
                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                        }
                      }
                      data-shrink={true}
                      htmlFor="supplier"
                      ownerState={
                        Object {
                          "aria-labelledby": "addProductFormLabels.supplierlabel",
                          "aria-required": true,
                          "children": <b>
                            ADDPRODUCTFORMLABELS.SUPPLIERLABEL
                            <span
                              className="super"
                            >
                              * 
                            </span>
                          </b>,
                          "disableAnimation": false,
                          "formControl": Object {
                            "adornedStart": false,
                            "color": "primary",
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "fullWidth": false,
                            "hiddenLabel": false,
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "registerEffect": [Function],
                            "required": false,
                            "setAdornedStart": [Function],
                            "size": "medium",
                            "variant": "outlined",
                          },
                          "htmlFor": "supplier",
                          "required": false,
                          "shrink": true,
                          "size": "medium",
                          "style": Object {
                            "color": "var(--Darkgray)",
                          },
                          "variant": "outlined",
                        }
                      }
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <ForwardRef(FormLabel)
                        aria-labelledby="addProductFormLabels.supplierlabel"
                        aria-required={true}
                        className="css-1bzvmy4-MuiInputLabel-root"
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={true}
                        htmlFor="supplier"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <MuiFormLabelRoot
                          aria-labelledby="addProductFormLabels.supplierlabel"
                          aria-required={true}
                          as="label"
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1bzvmy4-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={true}
                          htmlFor="supplier"
                          ownerState={
                            Object {
                              "aria-labelledby": "addProductFormLabels.supplierlabel",
                              "aria-required": true,
                              "children": <b>
                                ADDPRODUCTFORMLABELS.SUPPLIERLABEL
                                <span
                                  className="super"
                                >
                                  * 
                                </span>
                              </b>,
                              "className": "css-1bzvmy4-MuiInputLabel-root",
                              "classes": Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                              },
                              "color": "primary",
                              "component": "label",
                              "data-shrink": true,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "htmlFor": "supplier",
                              "required": false,
                              "style": Object {
                                "color": "var(--Darkgray)",
                              },
                            }
                          }
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.supplierlabel"
                            aria-required={true}
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1kty9di-MuiFormLabel-root-MuiInputLabel-root"
                            data-shrink={true}
                            htmlFor="supplier"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.SUPPLIERLABEL
                              <span
                                className="super"
                              >
                                * 
                              </span>
                            </b>
                          </label>
                        </MuiFormLabelRoot>
                      </ForwardRef(FormLabel)>
                    </MuiInputLabelRoot>
                  </ForwardRef(InputLabel)>
                  <ForwardRef
                    className="multi-select-container"
                    classNamePrefix="multi-select"
                    closeMenuOnSelect={false}
                    components={
                      Object {
                        "ClearIndicator": [Function],
                        "DropdownIndicator": [Function],
                        "IndicatorSeparator": [Function],
                        "MultiValue": [Function],
                        "Option": [Function],
                      }
                    }
                    hideSelectedOptions={false}
                    inputId="supplier"
                    isDisabled={false}
                    isMulti={true}
                    isSearchable={false}
                    loadingMessage={[Function]}
                    name="supplier"
                    noOptionsMessage={[Function]}
                    onBlur={[Function]}
                    onChange={[Function]}
                    options={Array []}
                    placeholder="addProductFormLabels.supplierplaceholder"
                    value={Array []}
                  >
                    <Select
                      aria-live="polite"
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="multi-select-container"
                      classNamePrefix="multi-select"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={false}
                      components={
                        Object {
                          "ClearIndicator": [Function],
                          "DropdownIndicator": [Function],
                          "IndicatorSeparator": [Function],
                          "MultiValue": [Function],
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      escapeClearsValue={false}
                      filterOption={[Function]}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      hideSelectedOptions={false}
                      inputId="supplier"
                      inputValue=""
                      isDisabled={false}
                      isLoading={false}
                      isMulti={true}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={false}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      name="supplier"
                      noOptionsMessage={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={Array []}
                      pageSize={5}
                      placeholder="addProductFormLabels.supplierplaceholder"
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={0}
                      tabSelectsValue={true}
                      value={Array []}
                    >
                      <SelectContainer
                        className="multi-select-container"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={false}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={true}
                        isRtl={false}
                        options={Array []}
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "aria-live": "polite",
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "multi-select-container",
                            "classNamePrefix": "multi-select",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": false,
                            "components": Object {
                              "ClearIndicator": [Function],
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "MultiValue": [Function],
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "escapeClearsValue": false,
                            "filterOption": [Function],
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "hideSelectedOptions": false,
                            "inputId": "supplier",
                            "inputValue": "",
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": true,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": false,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "name": "supplier",
                            "noOptionsMessage": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [],
                            "pageSize": 5,
                            "placeholder": "addProductFormLabels.supplierplaceholder",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": 0,
                            "tabSelectsValue": true,
                            "value": Array [],
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="multi-select-container"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": undefined,
                              "label": "container",
                              "pointerEvents": undefined,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="multi-select-container css-b62m3t-container"
                            onKeyDown={[Function]}
                          >
                            <LiveRegion
                              ariaSelection={null}
                              clearValue={[Function]}
                              cx={[Function]}
                              focusableOptions={Array []}
                              focusedValue={null}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              id="react-select-3-live-region"
                              isFocused={false}
                              isMulti={true}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "multi-select-container",
                                  "classNamePrefix": "multi-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": false,
                                  "components": Object {
                                    "ClearIndicator": [Function],
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValue": [Function],
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "hideSelectedOptions": false,
                                  "inputId": "supplier",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": true,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "supplier",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "addProductFormLabels.supplierplaceholder",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": Array [],
                                }
                              }
                              selectValue={Array []}
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <A11yText
                                id="react-select-3-live-region"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                  id="react-select-3-live-region"
                                >
                                  <span
                                    className="css-1f43avz-a11yText-A11yText"
                                    id="react-select-3-live-region"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                              <A11yText
                                aria-atomic="false"
                                aria-live="polite"
                                aria-relevant="additions text"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  aria-atomic="false"
                                  aria-live="polite"
                                  aria-relevant="additions text"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                >
                                  <span
                                    aria-atomic="false"
                                    aria-live="polite"
                                    aria-relevant="additions text"
                                    className="css-1f43avz-a11yText-A11yText"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                            </LiveRegion>
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={true}
                              isRtl={false}
                              menuIsOpen={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "multi-select-container",
                                  "classNamePrefix": "multi-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": false,
                                  "components": Object {
                                    "ClearIndicator": [Function],
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValue": [Function],
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "hideSelectedOptions": false,
                                  "inputId": "supplier",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": true,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "supplier",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "addProductFormLabels.supplierplaceholder",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": Array [],
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="multi-select__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": undefined,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="multi-select__control css-1s2u09g-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={true}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "multi-select-container",
                                        "classNamePrefix": "multi-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": false,
                                        "components": Object {
                                          "ClearIndicator": [Function],
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "MultiValue": [Function],
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "hideSelectedOptions": false,
                                        "inputId": "supplier",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": true,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "supplier",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "addProductFormLabels.supplierplaceholder",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": Array [],
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="multi-select__value-container multi-select__value-container--is-multi"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "grid",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="multi-select__value-container multi-select__value-container--is-multi css-319lph-ValueContainer"
                                      >
                                        <Placeholder
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "id": "react-select-3-placeholder",
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          key="placeholder"
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "supplier",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "supplier",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.supplierplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="multi-select__placeholder"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 50%)",
                                                "gridArea": "1 / 1 / 2 / 3",
                                                "label": "placeholder",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                              }
                                            }
                                            id="react-select-3-placeholder"
                                          >
                                            <div
                                              className="multi-select__placeholder css-14el2xx-placeholder"
                                              id="react-select-3-placeholder"
                                            >
                                              addProductFormLabels.supplierplaceholder
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Placeholder>
                                        <DummyInput
                                          aria-autocomplete="list"
                                          aria-controls="react-select-3-listbox"
                                          aria-describedby="react-select-3-placeholder"
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          aria-owns="react-select-3-listbox"
                                          aria-readonly={true}
                                          disabled={false}
                                          id="supplier"
                                          innerRef={[Function]}
                                          inputMode="none"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          role="combobox"
                                          tabIndex={0}
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DummyInput"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="input"
                                            aria-autocomplete="list"
                                            aria-controls="react-select-3-listbox"
                                            aria-describedby="react-select-3-placeholder"
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            aria-owns="react-select-3-listbox"
                                            aria-readonly={true}
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNNIiwiZmlsZSI6IkR1bW15SW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIHJlZj17aW5uZXJSZWZ9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */",
                                                "name": "mohuvp-dummyInput-DummyInput",
                                                "next": undefined,
                                                "styles": "label:dummyInput;background:0;border:0;caret-color:transparent;font-size:inherit;grid-area:1 / 1 / 2 / 3;outline:0;padding:0;width:1px;color:transparent;left:-100px;opacity:0;position:relative;transform:scale(.01);;label:DummyInput;",
                                                "toString": [Function],
                                              }
                                            }
                                            disabled={false}
                                            id="supplier"
                                            inputMode="none"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="combobox"
                                            tabIndex={0}
                                            value=""
                                          >
                                            <input
                                              aria-autocomplete="list"
                                              aria-controls="react-select-3-listbox"
                                              aria-describedby="react-select-3-placeholder"
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              aria-owns="react-select-3-listbox"
                                              aria-readonly={true}
                                              className="css-mohuvp-dummyInput-DummyInput"
                                              disabled={false}
                                              id="supplier"
                                              inputMode="none"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="combobox"
                                              tabIndex={0}
                                              value=""
                                            />
                                          </EmotionCssPropInternal>
                                        </DummyInput>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={true}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "multi-select-container",
                                        "classNamePrefix": "multi-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": false,
                                        "components": Object {
                                          "ClearIndicator": [Function],
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "MultiValue": [Function],
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "hideSelectedOptions": false,
                                        "inputId": "supplier",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": true,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "supplier",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "addProductFormLabels.supplierplaceholder",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": Array [],
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="multi-select__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="multi-select__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "supplier",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "supplier",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.supplierplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "supplier",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "supplier",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.supplierplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <DropdownIndicator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={false}
                                            innerProps={
                                              Object {
                                                "aria-hidden": "true",
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={true}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "multi-select-container",
                                                "classNamePrefix": "multi-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": false,
                                                "components": Object {
                                                  "ClearIndicator": [Function],
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "MultiValue": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "hideSelectedOptions": false,
                                                "inputId": "supplier",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": true,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "supplier",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "addProductFormLabels.supplierplaceholder",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Array [],
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              aria-hidden="true"
                                              className="multi-select__indicator multi-select__dropdown-indicator"
                                              css={
                                                Object {
                                                  ":hover": Object {
                                                    "color": "hsl(0, 0%, 60%)",
                                                  },
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 80%)",
                                                  "display": "flex",
                                                  "label": "indicatorContainer",
                                                  "padding": 8,
                                                  "transition": "color 150ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                aria-hidden="true"
                                                className="multi-select__indicator multi-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <ArrowDown>
                                                  <svg
                                                    height="1em"
                                                    viewBox="0 0 20 20"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="m1.742 5 8.628 7.844 7.821-7.812 1.413 1.418-9.17 9.159L.396 6.48Z"
                                                      fill="var(--Gray)"
                                                    />
                                                    <path
                                                      d="M0 0h20v20H0z"
                                                      fill="none"
                                                    />
                                                  </svg>
                                                </ArrowDown>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </DropdownIndicator>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                            <div>
                              <input
                                name="supplier"
                                type="hidden"
                              />
                            </div>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </ForwardRef>
                </div>
              </MuiFormControlRoot>
            </ForwardRef(FormControl)>
          </MultiSelect>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <MultiSelect
              disabled={false}
              error={false}
              id="branded"
              items={Array []}
              label="addProductFormLabels.brandedlabel"
              loadingMessage="Loading..."
              name="branded"
              noOptionsMessage="No Options found"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="addProductFormLabels.brandedplaceholder"
              required={true}
              value={Array []}
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <MultiSelect
            disabled={false}
            error={false}
            id="branded"
            items={Array []}
            label="addProductFormLabels.brandedlabel"
            loadingMessage="Loading..."
            name="branded"
            noOptionsMessage="No Options found"
            onBlur={[Function]}
            onChange={[Function]}
            placeholder="addProductFormLabels.brandedplaceholder"
            required={true}
            value={Array []}
          >
            <ForwardRef(FormControl)
              className="select"
            >
              <MuiFormControlRoot
                as="div"
                className="MuiFormControl-root select"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(InputLabel)
                        aria-labelledby="addProductFormLabels.brandedlabel"
                        aria-required={true}
                        htmlFor="branded"
                        shrink={true}
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <b>
                          ADDPRODUCTFORMLABELS.BRANDEDLABEL
                          <span
                            className="super"
                          >
                            * 
                          </span>
                        </b>
                      </ForwardRef(InputLabel)>,
                      <ForwardRef
                        className="multi-select-container"
                        classNamePrefix="multi-select"
                        closeMenuOnSelect={false}
                        components={
                          Object {
                            "ClearIndicator": [Function],
                            "DropdownIndicator": [Function],
                            "IndicatorSeparator": [Function],
                            "MultiValue": [Function],
                            "Option": [Function],
                          }
                        }
                        hideSelectedOptions={false}
                        inputId="branded"
                        isDisabled={false}
                        isMulti={true}
                        isSearchable={false}
                        loadingMessage={[Function]}
                        name="branded"
                        noOptionsMessage={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        options={Array []}
                        placeholder="addProductFormLabels.brandedplaceholder"
                        value={Array []}
                      />,
                      undefined,
                    ],
                    "className": "select",
                    "color": "primary",
                    "component": "div",
                    "disabled": false,
                    "error": false,
                    "fullWidth": false,
                    "hiddenLabel": false,
                    "margin": "none",
                    "required": false,
                    "size": "medium",
                    "variant": "outlined",
                  }
                }
              >
                <div
                  className="MuiFormControl-root select css-1nrlq1o-MuiFormControl-root"
                >
                  <ForwardRef(InputLabel)
                    aria-labelledby="addProductFormLabels.brandedlabel"
                    aria-required={true}
                    htmlFor="branded"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <MuiInputLabelRoot
                      aria-labelledby="addProductFormLabels.brandedlabel"
                      aria-required={true}
                      classes={
                        Object {
                          "asterisk": "",
                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                        }
                      }
                      data-shrink={true}
                      htmlFor="branded"
                      ownerState={
                        Object {
                          "aria-labelledby": "addProductFormLabels.brandedlabel",
                          "aria-required": true,
                          "children": <b>
                            ADDPRODUCTFORMLABELS.BRANDEDLABEL
                            <span
                              className="super"
                            >
                              * 
                            </span>
                          </b>,
                          "disableAnimation": false,
                          "formControl": Object {
                            "adornedStart": false,
                            "color": "primary",
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "fullWidth": false,
                            "hiddenLabel": false,
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "registerEffect": [Function],
                            "required": false,
                            "setAdornedStart": [Function],
                            "size": "medium",
                            "variant": "outlined",
                          },
                          "htmlFor": "branded",
                          "required": false,
                          "shrink": true,
                          "size": "medium",
                          "style": Object {
                            "color": "var(--Darkgray)",
                          },
                          "variant": "outlined",
                        }
                      }
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <ForwardRef(FormLabel)
                        aria-labelledby="addProductFormLabels.brandedlabel"
                        aria-required={true}
                        className="css-1bzvmy4-MuiInputLabel-root"
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={true}
                        htmlFor="branded"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <MuiFormLabelRoot
                          aria-labelledby="addProductFormLabels.brandedlabel"
                          aria-required={true}
                          as="label"
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1bzvmy4-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={true}
                          htmlFor="branded"
                          ownerState={
                            Object {
                              "aria-labelledby": "addProductFormLabels.brandedlabel",
                              "aria-required": true,
                              "children": <b>
                                ADDPRODUCTFORMLABELS.BRANDEDLABEL
                                <span
                                  className="super"
                                >
                                  * 
                                </span>
                              </b>,
                              "className": "css-1bzvmy4-MuiInputLabel-root",
                              "classes": Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                              },
                              "color": "primary",
                              "component": "label",
                              "data-shrink": true,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "htmlFor": "branded",
                              "required": false,
                              "style": Object {
                                "color": "var(--Darkgray)",
                              },
                            }
                          }
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.brandedlabel"
                            aria-required={true}
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1kty9di-MuiFormLabel-root-MuiInputLabel-root"
                            data-shrink={true}
                            htmlFor="branded"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.BRANDEDLABEL
                              <span
                                className="super"
                              >
                                * 
                              </span>
                            </b>
                          </label>
                        </MuiFormLabelRoot>
                      </ForwardRef(FormLabel)>
                    </MuiInputLabelRoot>
                  </ForwardRef(InputLabel)>
                  <ForwardRef
                    className="multi-select-container"
                    classNamePrefix="multi-select"
                    closeMenuOnSelect={false}
                    components={
                      Object {
                        "ClearIndicator": [Function],
                        "DropdownIndicator": [Function],
                        "IndicatorSeparator": [Function],
                        "MultiValue": [Function],
                        "Option": [Function],
                      }
                    }
                    hideSelectedOptions={false}
                    inputId="branded"
                    isDisabled={false}
                    isMulti={true}
                    isSearchable={false}
                    loadingMessage={[Function]}
                    name="branded"
                    noOptionsMessage={[Function]}
                    onBlur={[Function]}
                    onChange={[Function]}
                    options={Array []}
                    placeholder="addProductFormLabels.brandedplaceholder"
                    value={Array []}
                  >
                    <Select
                      aria-live="polite"
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="multi-select-container"
                      classNamePrefix="multi-select"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={false}
                      components={
                        Object {
                          "ClearIndicator": [Function],
                          "DropdownIndicator": [Function],
                          "IndicatorSeparator": [Function],
                          "MultiValue": [Function],
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      escapeClearsValue={false}
                      filterOption={[Function]}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      hideSelectedOptions={false}
                      inputId="branded"
                      inputValue=""
                      isDisabled={false}
                      isLoading={false}
                      isMulti={true}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={false}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      name="branded"
                      noOptionsMessage={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={Array []}
                      pageSize={5}
                      placeholder="addProductFormLabels.brandedplaceholder"
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={0}
                      tabSelectsValue={true}
                      value={Array []}
                    >
                      <SelectContainer
                        className="multi-select-container"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={false}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={true}
                        isRtl={false}
                        options={Array []}
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "aria-live": "polite",
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "multi-select-container",
                            "classNamePrefix": "multi-select",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": false,
                            "components": Object {
                              "ClearIndicator": [Function],
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "MultiValue": [Function],
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "escapeClearsValue": false,
                            "filterOption": [Function],
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "hideSelectedOptions": false,
                            "inputId": "branded",
                            "inputValue": "",
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": true,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": false,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "name": "branded",
                            "noOptionsMessage": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [],
                            "pageSize": 5,
                            "placeholder": "addProductFormLabels.brandedplaceholder",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": 0,
                            "tabSelectsValue": true,
                            "value": Array [],
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="multi-select-container"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": undefined,
                              "label": "container",
                              "pointerEvents": undefined,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="multi-select-container css-b62m3t-container"
                            onKeyDown={[Function]}
                          >
                            <LiveRegion
                              ariaSelection={null}
                              clearValue={[Function]}
                              cx={[Function]}
                              focusableOptions={Array []}
                              focusedValue={null}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              id="react-select-4-live-region"
                              isFocused={false}
                              isMulti={true}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "multi-select-container",
                                  "classNamePrefix": "multi-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": false,
                                  "components": Object {
                                    "ClearIndicator": [Function],
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValue": [Function],
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "hideSelectedOptions": false,
                                  "inputId": "branded",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": true,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "branded",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "addProductFormLabels.brandedplaceholder",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": Array [],
                                }
                              }
                              selectValue={Array []}
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <A11yText
                                id="react-select-4-live-region"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                  id="react-select-4-live-region"
                                >
                                  <span
                                    className="css-1f43avz-a11yText-A11yText"
                                    id="react-select-4-live-region"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                              <A11yText
                                aria-atomic="false"
                                aria-live="polite"
                                aria-relevant="additions text"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  aria-atomic="false"
                                  aria-live="polite"
                                  aria-relevant="additions text"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                >
                                  <span
                                    aria-atomic="false"
                                    aria-live="polite"
                                    aria-relevant="additions text"
                                    className="css-1f43avz-a11yText-A11yText"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                            </LiveRegion>
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={true}
                              isRtl={false}
                              menuIsOpen={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "multi-select-container",
                                  "classNamePrefix": "multi-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": false,
                                  "components": Object {
                                    "ClearIndicator": [Function],
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValue": [Function],
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "hideSelectedOptions": false,
                                  "inputId": "branded",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": true,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "branded",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "addProductFormLabels.brandedplaceholder",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": Array [],
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="multi-select__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": undefined,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="multi-select__control css-1s2u09g-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={true}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "multi-select-container",
                                        "classNamePrefix": "multi-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": false,
                                        "components": Object {
                                          "ClearIndicator": [Function],
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "MultiValue": [Function],
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "hideSelectedOptions": false,
                                        "inputId": "branded",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": true,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "branded",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "addProductFormLabels.brandedplaceholder",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": Array [],
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="multi-select__value-container multi-select__value-container--is-multi"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "grid",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="multi-select__value-container multi-select__value-container--is-multi css-319lph-ValueContainer"
                                      >
                                        <Placeholder
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "id": "react-select-4-placeholder",
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          key="placeholder"
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "branded",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "branded",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.brandedplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="multi-select__placeholder"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 50%)",
                                                "gridArea": "1 / 1 / 2 / 3",
                                                "label": "placeholder",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                              }
                                            }
                                            id="react-select-4-placeholder"
                                          >
                                            <div
                                              className="multi-select__placeholder css-14el2xx-placeholder"
                                              id="react-select-4-placeholder"
                                            >
                                              addProductFormLabels.brandedplaceholder
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Placeholder>
                                        <DummyInput
                                          aria-autocomplete="list"
                                          aria-controls="react-select-4-listbox"
                                          aria-describedby="react-select-4-placeholder"
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          aria-owns="react-select-4-listbox"
                                          aria-readonly={true}
                                          disabled={false}
                                          id="branded"
                                          innerRef={[Function]}
                                          inputMode="none"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          role="combobox"
                                          tabIndex={0}
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DummyInput"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="input"
                                            aria-autocomplete="list"
                                            aria-controls="react-select-4-listbox"
                                            aria-describedby="react-select-4-placeholder"
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            aria-owns="react-select-4-listbox"
                                            aria-readonly={true}
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNNIiwiZmlsZSI6IkR1bW15SW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIHJlZj17aW5uZXJSZWZ9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */",
                                                "name": "mohuvp-dummyInput-DummyInput",
                                                "next": undefined,
                                                "styles": "label:dummyInput;background:0;border:0;caret-color:transparent;font-size:inherit;grid-area:1 / 1 / 2 / 3;outline:0;padding:0;width:1px;color:transparent;left:-100px;opacity:0;position:relative;transform:scale(.01);;label:DummyInput;",
                                                "toString": [Function],
                                              }
                                            }
                                            disabled={false}
                                            id="branded"
                                            inputMode="none"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="combobox"
                                            tabIndex={0}
                                            value=""
                                          >
                                            <input
                                              aria-autocomplete="list"
                                              aria-controls="react-select-4-listbox"
                                              aria-describedby="react-select-4-placeholder"
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              aria-owns="react-select-4-listbox"
                                              aria-readonly={true}
                                              className="css-mohuvp-dummyInput-DummyInput"
                                              disabled={false}
                                              id="branded"
                                              inputMode="none"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="combobox"
                                              tabIndex={0}
                                              value=""
                                            />
                                          </EmotionCssPropInternal>
                                        </DummyInput>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={true}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "multi-select-container",
                                        "classNamePrefix": "multi-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": false,
                                        "components": Object {
                                          "ClearIndicator": [Function],
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "MultiValue": [Function],
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "hideSelectedOptions": false,
                                        "inputId": "branded",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": true,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "branded",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "addProductFormLabels.brandedplaceholder",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": Array [],
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="multi-select__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="multi-select__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "branded",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "branded",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.brandedplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "branded",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "branded",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.brandedplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <DropdownIndicator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={false}
                                            innerProps={
                                              Object {
                                                "aria-hidden": "true",
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={true}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "multi-select-container",
                                                "classNamePrefix": "multi-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": false,
                                                "components": Object {
                                                  "ClearIndicator": [Function],
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "MultiValue": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "hideSelectedOptions": false,
                                                "inputId": "branded",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": true,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "branded",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "addProductFormLabels.brandedplaceholder",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Array [],
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              aria-hidden="true"
                                              className="multi-select__indicator multi-select__dropdown-indicator"
                                              css={
                                                Object {
                                                  ":hover": Object {
                                                    "color": "hsl(0, 0%, 60%)",
                                                  },
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 80%)",
                                                  "display": "flex",
                                                  "label": "indicatorContainer",
                                                  "padding": 8,
                                                  "transition": "color 150ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                aria-hidden="true"
                                                className="multi-select__indicator multi-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <ArrowDown>
                                                  <svg
                                                    height="1em"
                                                    viewBox="0 0 20 20"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="m1.742 5 8.628 7.844 7.821-7.812 1.413 1.418-9.17 9.159L.396 6.48Z"
                                                      fill="var(--Gray)"
                                                    />
                                                    <path
                                                      d="M0 0h20v20H0z"
                                                      fill="none"
                                                    />
                                                  </svg>
                                                </ArrowDown>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </DropdownIndicator>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                            <div>
                              <input
                                name="branded"
                                type="hidden"
                              />
                            </div>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </ForwardRef>
                </div>
              </MuiFormControlRoot>
            </ForwardRef(FormControl)>
          </MultiSelect>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <MultiSelect
              disabled={false}
              error={false}
              id="actualProduct"
              items={Array []}
              label="addProductFormLabels.actualproductlabel"
              loadingMessage="Loading..."
              name="actualProduct"
              noOptionsMessage="No Options found"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="addProductFormLabels.actualproductplaceholder"
              required={true}
              value={Array []}
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <MultiSelect
            disabled={false}
            error={false}
            id="actualProduct"
            items={Array []}
            label="addProductFormLabels.actualproductlabel"
            loadingMessage="Loading..."
            name="actualProduct"
            noOptionsMessage="No Options found"
            onBlur={[Function]}
            onChange={[Function]}
            placeholder="addProductFormLabels.actualproductplaceholder"
            required={true}
            value={Array []}
          >
            <ForwardRef(FormControl)
              className="select"
            >
              <MuiFormControlRoot
                as="div"
                className="MuiFormControl-root select"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(InputLabel)
                        aria-labelledby="addProductFormLabels.actualproductlabel"
                        aria-required={true}
                        htmlFor="actualProduct"
                        shrink={true}
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <b>
                          ADDPRODUCTFORMLABELS.ACTUALPRODUCTLABEL
                          <span
                            className="super"
                          >
                            * 
                          </span>
                        </b>
                      </ForwardRef(InputLabel)>,
                      <ForwardRef
                        className="multi-select-container"
                        classNamePrefix="multi-select"
                        closeMenuOnSelect={false}
                        components={
                          Object {
                            "ClearIndicator": [Function],
                            "DropdownIndicator": [Function],
                            "IndicatorSeparator": [Function],
                            "MultiValue": [Function],
                            "Option": [Function],
                          }
                        }
                        hideSelectedOptions={false}
                        inputId="actualProduct"
                        isDisabled={false}
                        isMulti={true}
                        isSearchable={false}
                        loadingMessage={[Function]}
                        name="actualProduct"
                        noOptionsMessage={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        options={Array []}
                        placeholder="addProductFormLabels.actualproductplaceholder"
                        value={Array []}
                      />,
                      undefined,
                    ],
                    "className": "select",
                    "color": "primary",
                    "component": "div",
                    "disabled": false,
                    "error": false,
                    "fullWidth": false,
                    "hiddenLabel": false,
                    "margin": "none",
                    "required": false,
                    "size": "medium",
                    "variant": "outlined",
                  }
                }
              >
                <div
                  className="MuiFormControl-root select css-1nrlq1o-MuiFormControl-root"
                >
                  <ForwardRef(InputLabel)
                    aria-labelledby="addProductFormLabels.actualproductlabel"
                    aria-required={true}
                    htmlFor="actualProduct"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <MuiInputLabelRoot
                      aria-labelledby="addProductFormLabels.actualproductlabel"
                      aria-required={true}
                      classes={
                        Object {
                          "asterisk": "",
                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                        }
                      }
                      data-shrink={true}
                      htmlFor="actualProduct"
                      ownerState={
                        Object {
                          "aria-labelledby": "addProductFormLabels.actualproductlabel",
                          "aria-required": true,
                          "children": <b>
                            ADDPRODUCTFORMLABELS.ACTUALPRODUCTLABEL
                            <span
                              className="super"
                            >
                              * 
                            </span>
                          </b>,
                          "disableAnimation": false,
                          "formControl": Object {
                            "adornedStart": false,
                            "color": "primary",
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "fullWidth": false,
                            "hiddenLabel": false,
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "registerEffect": [Function],
                            "required": false,
                            "setAdornedStart": [Function],
                            "size": "medium",
                            "variant": "outlined",
                          },
                          "htmlFor": "actualProduct",
                          "required": false,
                          "shrink": true,
                          "size": "medium",
                          "style": Object {
                            "color": "var(--Darkgray)",
                          },
                          "variant": "outlined",
                        }
                      }
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <ForwardRef(FormLabel)
                        aria-labelledby="addProductFormLabels.actualproductlabel"
                        aria-required={true}
                        className="css-1bzvmy4-MuiInputLabel-root"
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={true}
                        htmlFor="actualProduct"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <MuiFormLabelRoot
                          aria-labelledby="addProductFormLabels.actualproductlabel"
                          aria-required={true}
                          as="label"
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1bzvmy4-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={true}
                          htmlFor="actualProduct"
                          ownerState={
                            Object {
                              "aria-labelledby": "addProductFormLabels.actualproductlabel",
                              "aria-required": true,
                              "children": <b>
                                ADDPRODUCTFORMLABELS.ACTUALPRODUCTLABEL
                                <span
                                  className="super"
                                >
                                  * 
                                </span>
                              </b>,
                              "className": "css-1bzvmy4-MuiInputLabel-root",
                              "classes": Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                              },
                              "color": "primary",
                              "component": "label",
                              "data-shrink": true,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "htmlFor": "actualProduct",
                              "required": false,
                              "style": Object {
                                "color": "var(--Darkgray)",
                              },
                            }
                          }
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.actualproductlabel"
                            aria-required={true}
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1kty9di-MuiFormLabel-root-MuiInputLabel-root"
                            data-shrink={true}
                            htmlFor="actualProduct"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.ACTUALPRODUCTLABEL
                              <span
                                className="super"
                              >
                                * 
                              </span>
                            </b>
                          </label>
                        </MuiFormLabelRoot>
                      </ForwardRef(FormLabel)>
                    </MuiInputLabelRoot>
                  </ForwardRef(InputLabel)>
                  <ForwardRef
                    className="multi-select-container"
                    classNamePrefix="multi-select"
                    closeMenuOnSelect={false}
                    components={
                      Object {
                        "ClearIndicator": [Function],
                        "DropdownIndicator": [Function],
                        "IndicatorSeparator": [Function],
                        "MultiValue": [Function],
                        "Option": [Function],
                      }
                    }
                    hideSelectedOptions={false}
                    inputId="actualProduct"
                    isDisabled={false}
                    isMulti={true}
                    isSearchable={false}
                    loadingMessage={[Function]}
                    name="actualProduct"
                    noOptionsMessage={[Function]}
                    onBlur={[Function]}
                    onChange={[Function]}
                    options={Array []}
                    placeholder="addProductFormLabels.actualproductplaceholder"
                    value={Array []}
                  >
                    <Select
                      aria-live="polite"
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="multi-select-container"
                      classNamePrefix="multi-select"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={false}
                      components={
                        Object {
                          "ClearIndicator": [Function],
                          "DropdownIndicator": [Function],
                          "IndicatorSeparator": [Function],
                          "MultiValue": [Function],
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      escapeClearsValue={false}
                      filterOption={[Function]}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      hideSelectedOptions={false}
                      inputId="actualProduct"
                      inputValue=""
                      isDisabled={false}
                      isLoading={false}
                      isMulti={true}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={false}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      name="actualProduct"
                      noOptionsMessage={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={Array []}
                      pageSize={5}
                      placeholder="addProductFormLabels.actualproductplaceholder"
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={0}
                      tabSelectsValue={true}
                      value={Array []}
                    >
                      <SelectContainer
                        className="multi-select-container"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={false}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={true}
                        isRtl={false}
                        options={Array []}
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "aria-live": "polite",
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "multi-select-container",
                            "classNamePrefix": "multi-select",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": false,
                            "components": Object {
                              "ClearIndicator": [Function],
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "MultiValue": [Function],
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "escapeClearsValue": false,
                            "filterOption": [Function],
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "hideSelectedOptions": false,
                            "inputId": "actualProduct",
                            "inputValue": "",
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": true,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": false,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "name": "actualProduct",
                            "noOptionsMessage": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [],
                            "pageSize": 5,
                            "placeholder": "addProductFormLabels.actualproductplaceholder",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": 0,
                            "tabSelectsValue": true,
                            "value": Array [],
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="multi-select-container"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": undefined,
                              "label": "container",
                              "pointerEvents": undefined,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="multi-select-container css-b62m3t-container"
                            onKeyDown={[Function]}
                          >
                            <LiveRegion
                              ariaSelection={null}
                              clearValue={[Function]}
                              cx={[Function]}
                              focusableOptions={Array []}
                              focusedValue={null}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              id="react-select-5-live-region"
                              isFocused={false}
                              isMulti={true}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "multi-select-container",
                                  "classNamePrefix": "multi-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": false,
                                  "components": Object {
                                    "ClearIndicator": [Function],
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValue": [Function],
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "hideSelectedOptions": false,
                                  "inputId": "actualProduct",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": true,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "actualProduct",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "addProductFormLabels.actualproductplaceholder",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": Array [],
                                }
                              }
                              selectValue={Array []}
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <A11yText
                                id="react-select-5-live-region"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                  id="react-select-5-live-region"
                                >
                                  <span
                                    className="css-1f43avz-a11yText-A11yText"
                                    id="react-select-5-live-region"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                              <A11yText
                                aria-atomic="false"
                                aria-live="polite"
                                aria-relevant="additions text"
                              >
                                <EmotionCssPropInternal
                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                  aria-atomic="false"
                                  aria-live="polite"
                                  aria-relevant="additions text"
                                  css={
                                    Object {
                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                      "name": "1f43avz-a11yText-A11yText",
                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                      "toString": [Function],
                                    }
                                  }
                                >
                                  <span
                                    aria-atomic="false"
                                    aria-live="polite"
                                    aria-relevant="additions text"
                                    className="css-1f43avz-a11yText-A11yText"
                                  />
                                </EmotionCssPropInternal>
                              </A11yText>
                            </LiveRegion>
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={true}
                              isRtl={false}
                              menuIsOpen={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "aria-live": "polite",
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "multi-select-container",
                                  "classNamePrefix": "multi-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": false,
                                  "components": Object {
                                    "ClearIndicator": [Function],
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValue": [Function],
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "hideSelectedOptions": false,
                                  "inputId": "actualProduct",
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": true,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": false,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "name": "actualProduct",
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "addProductFormLabels.actualproductplaceholder",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": 0,
                                  "tabSelectsValue": true,
                                  "value": Array [],
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="multi-select__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": undefined,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="multi-select__control css-1s2u09g-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={true}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "multi-select-container",
                                        "classNamePrefix": "multi-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": false,
                                        "components": Object {
                                          "ClearIndicator": [Function],
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "MultiValue": [Function],
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "hideSelectedOptions": false,
                                        "inputId": "actualProduct",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": true,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "actualProduct",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "addProductFormLabels.actualproductplaceholder",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": Array [],
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="multi-select__value-container multi-select__value-container--is-multi"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "grid",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="multi-select__value-container multi-select__value-container--is-multi css-319lph-ValueContainer"
                                      >
                                        <Placeholder
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "id": "react-select-5-placeholder",
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          key="placeholder"
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "actualProduct",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "actualProduct",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.actualproductplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="multi-select__placeholder"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 50%)",
                                                "gridArea": "1 / 1 / 2 / 3",
                                                "label": "placeholder",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                              }
                                            }
                                            id="react-select-5-placeholder"
                                          >
                                            <div
                                              className="multi-select__placeholder css-14el2xx-placeholder"
                                              id="react-select-5-placeholder"
                                            >
                                              addProductFormLabels.actualproductplaceholder
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Placeholder>
                                        <DummyInput
                                          aria-autocomplete="list"
                                          aria-controls="react-select-5-listbox"
                                          aria-describedby="react-select-5-placeholder"
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          aria-owns="react-select-5-listbox"
                                          aria-readonly={true}
                                          disabled={false}
                                          id="actualProduct"
                                          innerRef={[Function]}
                                          inputMode="none"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          role="combobox"
                                          tabIndex={0}
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DummyInput"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="input"
                                            aria-autocomplete="list"
                                            aria-controls="react-select-5-listbox"
                                            aria-describedby="react-select-5-placeholder"
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            aria-owns="react-select-5-listbox"
                                            aria-readonly={true}
                                            css={
                                              Object {
                                                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNNIiwiZmlsZSI6IkR1bW15SW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIHJlZj17aW5uZXJSZWZ9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */",
                                                "name": "mohuvp-dummyInput-DummyInput",
                                                "next": undefined,
                                                "styles": "label:dummyInput;background:0;border:0;caret-color:transparent;font-size:inherit;grid-area:1 / 1 / 2 / 3;outline:0;padding:0;width:1px;color:transparent;left:-100px;opacity:0;position:relative;transform:scale(.01);;label:DummyInput;",
                                                "toString": [Function],
                                              }
                                            }
                                            disabled={false}
                                            id="actualProduct"
                                            inputMode="none"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            role="combobox"
                                            tabIndex={0}
                                            value=""
                                          >
                                            <input
                                              aria-autocomplete="list"
                                              aria-controls="react-select-5-listbox"
                                              aria-describedby="react-select-5-placeholder"
                                              aria-expanded={false}
                                              aria-haspopup={true}
                                              aria-owns="react-select-5-listbox"
                                              aria-readonly={true}
                                              className="css-mohuvp-dummyInput-DummyInput"
                                              disabled={false}
                                              id="actualProduct"
                                              inputMode="none"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="combobox"
                                              tabIndex={0}
                                              value=""
                                            />
                                          </EmotionCssPropInternal>
                                        </DummyInput>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={false}
                                    isDisabled={false}
                                    isMulti={true}
                                    isRtl={false}
                                    options={Array []}
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "aria-live": "polite",
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "multi-select-container",
                                        "classNamePrefix": "multi-select",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": false,
                                        "components": Object {
                                          "ClearIndicator": [Function],
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "MultiValue": [Function],
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "escapeClearsValue": false,
                                        "filterOption": [Function],
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "hideSelectedOptions": false,
                                        "inputId": "actualProduct",
                                        "inputValue": "",
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": true,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": false,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "name": "actualProduct",
                                        "noOptionsMessage": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [],
                                        "pageSize": 5,
                                        "placeholder": "addProductFormLabels.actualproductplaceholder",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": 0,
                                        "tabSelectsValue": true,
                                        "value": Array [],
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="multi-select__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="multi-select__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "actualProduct",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "actualProduct",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.actualproductplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={false}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={true}
                                          isRtl={false}
                                          options={Array []}
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "aria-live": "polite",
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "multi-select-container",
                                              "classNamePrefix": "multi-select",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": false,
                                              "components": Object {
                                                "ClearIndicator": [Function],
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValue": [Function],
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideSelectedOptions": false,
                                              "inputId": "actualProduct",
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": true,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": false,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "name": "actualProduct",
                                              "noOptionsMessage": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [],
                                              "pageSize": 5,
                                              "placeholder": "addProductFormLabels.actualproductplaceholder",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": 0,
                                              "tabSelectsValue": true,
                                              "value": Array [],
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <DropdownIndicator
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={false}
                                            innerProps={
                                              Object {
                                                "aria-hidden": "true",
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={true}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "multi-select-container",
                                                "classNamePrefix": "multi-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": false,
                                                "components": Object {
                                                  "ClearIndicator": [Function],
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "MultiValue": [Function],
                                                  "Option": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "hideSelectedOptions": false,
                                                "inputId": "actualProduct",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": true,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "actualProduct",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "addProductFormLabels.actualproductplaceholder",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Array [],
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              aria-hidden="true"
                                              className="multi-select__indicator multi-select__dropdown-indicator"
                                              css={
                                                Object {
                                                  ":hover": Object {
                                                    "color": "hsl(0, 0%, 60%)",
                                                  },
                                                  "boxSizing": "border-box",
                                                  "color": "hsl(0, 0%, 80%)",
                                                  "display": "flex",
                                                  "label": "indicatorContainer",
                                                  "padding": 8,
                                                  "transition": "color 150ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                aria-hidden="true"
                                                className="multi-select__indicator multi-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <ArrowDown>
                                                  <svg
                                                    height="1em"
                                                    viewBox="0 0 20 20"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="m1.742 5 8.628 7.844 7.821-7.812 1.413 1.418-9.17 9.159L.396 6.48Z"
                                                      fill="var(--Gray)"
                                                    />
                                                    <path
                                                      d="M0 0h20v20H0z"
                                                      fill="none"
                                                    />
                                                  </svg>
                                                </ArrowDown>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </DropdownIndicator>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                            <div>
                              <input
                                name="actualProduct"
                                type="hidden"
                              />
                            </div>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </ForwardRef>
                </div>
              </MuiFormControlRoot>
            </ForwardRef(FormControl)>
          </MultiSelect>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        />
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <SupplierRack
              formik={
                Object {
                  "error": "",
                  "getFieldProps": [MockFunction] {
                    "calls": Array [
                      Array [
                        "state",
                      ],
                      Array [
                        "cityId",
                      ],
                      Array [
                        "opisName",
                      ],
                      Array [
                        "productNm",
                      ],
                      Array [
                        "state",
                      ],
                      Array [
                        "cityId",
                      ],
                      Array [
                        "opisName",
                      ],
                      Array [
                        "productNm",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "initialError": "",
                  "initialTouched": false,
                  "initialValue": "",
                  "setFieldValue": [MockFunction],
                  "touched": false,
                  "values": Object {
                    "actualProduct": Array [],
                    "addedPriceAmt": 0,
                    "branded": Array [],
                    "city": "",
                    "cityId": "",
                    "discountPriceAmt": 0,
                    "manualPriceAmt": 0,
                    "masterProductName": Object {
                      "label": "",
                      "value": "",
                    },
                    "opisName": "",
                    "pricingModel": Object {
                      "label": "",
                      "value": "",
                    },
                    "productNm": "",
                    "productType": Object {
                      "label": "",
                      "value": "",
                    },
                    "state": "",
                    "supplier": Array [],
                    "supplierPrice": 0,
                    "taxExemption": Array [],
                  },
                }
              }
              isDisabled={false}
              isSaveCancelShown={false}
              resetSupplierValue={null}
              setSupplierPrice={[MockFunction]}
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <SupplierRack
            formik={
              Object {
                "error": "",
                "getFieldProps": [MockFunction] {
                  "calls": Array [
                    Array [
                      "state",
                    ],
                    Array [
                      "cityId",
                    ],
                    Array [
                      "opisName",
                    ],
                    Array [
                      "productNm",
                    ],
                    Array [
                      "state",
                    ],
                    Array [
                      "cityId",
                    ],
                    Array [
                      "opisName",
                    ],
                    Array [
                      "productNm",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "initialError": "",
                "initialTouched": false,
                "initialValue": "",
                "setFieldValue": [MockFunction],
                "touched": false,
                "values": Object {
                  "actualProduct": Array [],
                  "addedPriceAmt": 0,
                  "branded": Array [],
                  "city": "",
                  "cityId": "",
                  "discountPriceAmt": 0,
                  "manualPriceAmt": 0,
                  "masterProductName": Object {
                    "label": "",
                    "value": "",
                  },
                  "opisName": "",
                  "pricingModel": Object {
                    "label": "",
                    "value": "",
                  },
                  "productNm": "",
                  "productType": Object {
                    "label": "",
                    "value": "",
                  },
                  "state": "",
                  "supplier": Array [],
                  "supplierPrice": 0,
                  "taxExemption": Array [],
                },
              }
            }
            isDisabled={false}
            isSaveCancelShown={false}
            resetSupplierValue={null}
            setSupplierPrice={[MockFunction]}
          >
            <h4
              className="checkbox-heading price-heading"
            >
               
              addProductFormLabels.supplierrackheading
               
            </h4>
            <Button
              className="supplier-modal-btn "
              disabled={true}
              variant="outlined"
            >
              <WithStyles(ForwardRef(Button))
                className="supplier-modal-btn "
                color="default"
                disabled={true}
                variant="outlined"
              >
                <ForwardRef(Button)
                  className="supplier-modal-btn "
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit",
                      "contained": "MuiButton-contained",
                      "containedPrimary": "MuiButton-containedPrimary",
                      "containedSecondary": "MuiButton-containedSecondary",
                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                      "disableElevation": "MuiButton-disableElevation",
                      "disabled": "Mui-disabled",
                      "endIcon": "MuiButton-endIcon",
                      "focusVisible": "Mui-focusVisible",
                      "fullWidth": "MuiButton-fullWidth",
                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                      "label": "MuiButton-label",
                      "outlined": "MuiButton-outlined",
                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                      "root": "MuiButton-root",
                      "sizeLarge": "MuiButton-sizeLarge",
                      "sizeSmall": "MuiButton-sizeSmall",
                      "startIcon": "MuiButton-startIcon",
                      "text": "MuiButton-text",
                      "textPrimary": "MuiButton-textPrimary",
                      "textSecondary": "MuiButton-textSecondary",
                      "textSizeLarge": "MuiButton-textSizeLarge",
                      "textSizeSmall": "MuiButton-textSizeSmall",
                    }
                  }
                  color="default"
                  disabled={true}
                  variant="outlined"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    className="MuiButton-root MuiButton-outlined supplier-modal-btn  Mui-disabled"
                    component="button"
                    disabled={true}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    type="button"
                  >
                    <ForwardRef(ButtonBase)
                      className="MuiButton-root MuiButton-outlined supplier-modal-btn  Mui-disabled"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="button"
                      disabled={true}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined supplier-modal-btn  Mui-disabled Mui-disabled"
                        disabled={true}
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={-1}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          <div
                            className="price-div"
                            onClick={[Function]}
                          >
                             
                            Choose the supplier price
                             
                          </div>
                           
                        </span>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(Button)>
              </WithStyles(ForwardRef(Button))>
            </Button>
            <ForwardRef(Dialog)
              aria-labelledby="supplier-rack-dialog"
              className="supplierRack"
              disableEscapeKeyDown={true}
              onClose={[Function]}
              open={false}
            >
              <MuiDialogRoot
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "components": [Function],
                        "componentsProps": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "sx": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "__emotion_forwardProp": [Function],
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      "label:MuiDialog-backdrop;",
                      Object {
                        "zIndex": -1,
                      },
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "as": undefined,
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root supplierRack"
                closeAfterTransition={true}
                disableEscapeKeyDown={true}
                onClick={[Function]}
                onClose={[Function]}
                open={false}
                ownerState={
                  Object {
                    "aria-labelledby": "supplier-rack-dialog",
                    "children": <div
                      className="supplierRack-dialog-container"
                    >
                      <ForwardRef(Grid)
                        container={true}
                      >
                        <ForwardRef(Grid)
                          item={true}
                          md={10}
                          xs={10}
                        >
                          <ForwardRef(Typography)
                            className="fw-bold"
                            color="var(--Darkgray)"
                            component="h2"
                            id="supplier-rack-dialog-title"
                            pl={4.5}
                            pt={2.5}
                            variant="h2"
                          >
                            addProductFormLabels.supplierpriceheading
                          </ForwardRef(Typography)>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          md={2}
                          textAlign="right"
                          xs={2}
                        >
                          <ForwardRef(IconButton)
                            edge="start"
                            onClick={[Function]}
                          >
                            <CloseIcon
                              className="info_panel_close_icon"
                            />
                          </ForwardRef(IconButton)>
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>
                      <ForwardRef(DialogContent)
                        className="supplierRack-content"
                      >
                        <ForwardRef(Grid)
                          container={true}
                        >
                          <ForwardRef(Grid)
                            item={true}
                            md={12}
                            pb={5}
                            xs={12}
                          >
                            <GridComponent
                              enableRowAction={false}
                              enableRowSelection={true}
                              getPages={[Function]}
                              handleSelect={[Function]}
                              header={
                                Array [
                                  Object {
                                    "field": "productIndicator",
                                    "label": "PRODUCT INDICATOR",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "productType",
                                    "label": "PRODUCT TYPE",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "priceDate",
                                    "label": "DATE DAILY",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "cityId",
                                    "label": "CITY ID",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "state",
                                    "label": "STATE",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "city",
                                    "label": "CITY",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "supplier",
                                    "label": "SUPPLIER",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "brandIndicator",
                                    "label": "BRAND",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "terms",
                                    "label": "TERM",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "grossPrice",
                                    "label": "NET PRICE",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "uniqueMarker",
                                    "label": "UNIQUE MARKER",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "octaneValue",
                                    "label": "OCTANE LEVEL",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "actualProduct",
                                    "label": "ACTUAL PRODUCT",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "rvp",
                                    "label": "RVP",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "dieselBlend",
                                    "label": "DIESEL BLEND",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "bioType",
                                    "label": "BIO TYPE",
                                    "type": "text",
                                  },
                                  Object {
                                    "field": "lastUpdatedDate",
                                    "label": "LAST UPDATED DATE",
                                    "type": "text",
                                  },
                                ]
                              }
                              isLoading={false}
                              noDataMsg="addProductFormLabels.supplierpricenodatamsg"
                              primaryKey="productKey"
                              rowActionOptions={Array []}
                              rows={Array []}
                              searchTerm=""
                              singleRowSelection={true}
                            />
                          </ForwardRef(Grid)>
                        </ForwardRef(Grid)>
                        <ForwardRef(DialogActions)
                          className="supplierRack-dialog-actions"
                        >
                          <Button
                            aria-label="cancel"
                            className="mr-4"
                            onClick={[Function]}
                            types="cancel"
                          >
                            Cancel
                          </Button>
                          <Button
                            aria-label="primary"
                            className="mr-4 supplierRackBtn"
                            disabled={true}
                            onClick={[Function]}
                            types="primary"
                          >
                            Done
                          </Button>
                        </ForwardRef(DialogActions)>
                      </ForwardRef(DialogContent)>
                    </div>,
                    "className": "supplierRack",
                    "disableEscapeKeyDown": true,
                    "fullScreen": false,
                    "fullWidth": false,
                    "maxWidth": "sm",
                    "onClose": [Function],
                    "open": false,
                    "scroll": "paper",
                  }
                }
              >
                <ForwardRef(Modal)
                  BackdropComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "components": [Function],
                          "componentsProps": [Function],
                          "invisible": [Function],
                          "open": [Function],
                          "sx": [Function],
                          "transitionDuration": [Function],
                        },
                        "render": [Function],
                      },
                      "__emotion_forwardProp": [Function],
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        "label:MuiDialog-backdrop;",
                        Object {
                          "zIndex": -1,
                        },
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  BackdropProps={
                    Object {
                      "as": undefined,
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    }
                  }
                  className="MuiDialog-root supplierRack css-1h8td7x-MuiDialog-root"
                  closeAfterTransition={true}
                  disableEscapeKeyDown={true}
                  onClick={[Function]}
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(ModalUnstyled)
                    BackdropComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "components": [Function],
                            "componentsProps": [Function],
                            "invisible": [Function],
                            "open": [Function],
                            "sx": [Function],
                            "transitionDuration": [Function],
                          },
                          "render": [Function],
                        },
                        "__emotion_forwardProp": [Function],
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          "label:MuiDialog-backdrop;",
                          Object {
                            "zIndex": -1,
                          },
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    BackdropProps={
                      Object {
                        "as": undefined,
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      }
                    }
                    className="MuiDialog-root supplierRack css-1h8td7x-MuiDialog-root"
                    closeAfterTransition={true}
                    components={
                      Object {
                        "Root": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "div",
                          "__emotion_forwardProp": [Function],
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            "label:MuiModal-root;",
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "render": [Function],
                          "withComponent": [Function],
                        },
                      }
                    }
                    componentsProps={
                      Object {
                        "root": Object {
                          "ownerState": Object {},
                        },
                      }
                    }
                    disableAutoFocus={false}
                    disableEnforceFocus={false}
                    disableEscapeKeyDown={true}
                    disablePortal={false}
                    disableRestoreFocus={false}
                    disableScrollLock={false}
                    hideBackdrop={false}
                    keepMounted={false}
                    onClick={[Function]}
                    onClose={[Function]}
                    onTransitionEnter={[Function]}
                    onTransitionExited={[Function]}
                    open={false}
                  />
                </ForwardRef(Modal)>
              </MuiDialogRoot>
            </ForwardRef(Dialog)>
          </SupplierRack>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        />
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <Input
              autoComplete="new-password"
              description=""
              disabled={true}
              error={false}
              id="opisName"
              label="addProductFormLabels.addproductopisname"
              name="opisName"
              onClick={[Function]}
              required={false}
              type="text"
              width="100%"
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <Input
            autoComplete="new-password"
            description=""
            disabled={true}
            error={false}
            id="opisName"
            label="addProductFormLabels.addproductopisname"
            name="opisName"
            onClick={[Function]}
            required={false}
            type="text"
            width="100%"
          >
            <WithStyles(ForwardRef(FormControl))
              className="formInput"
            >
              <ForwardRef(FormControl)
                className="formInput"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
              >
                <div
                  className="MuiFormControl-root formInput"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    aria-labelledby="addProductFormLabels.addproductopisname"
                    aria-required={false}
                    htmlFor="opisName"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <ForwardRef(InputLabel)
                      aria-labelledby="addProductFormLabels.addproductopisname"
                      aria-required={false}
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="opisName"
                      shrink={true}
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        aria-labelledby="addProductFormLabels.addproductopisname"
                        aria-required={false}
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={true}
                        htmlFor="opisName"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <ForwardRef(FormLabel)
                          aria-labelledby="addProductFormLabels.addproductopisname"
                          aria-required={false}
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={true}
                          htmlFor="opisName"
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.addproductopisname"
                            aria-required={false}
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                            data-shrink={true}
                            htmlFor="opisName"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.ADDPRODUCTOPISNAME
                            </b>
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(InputBase))
                    aria-describedby=""
                    aria-required={false}
                    autoComplete="new-password"
                    disabled={true}
                    error={false}
                    id="opisName"
                    name="opisName"
                    onClick={[Function]}
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                    type="text"
                  >
                    <ForwardRef(InputBase)
                      aria-describedby=""
                      aria-required={false}
                      autoComplete="new-password"
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense",
                          "multiline": "MuiInputBase-multiline",
                          "root": "MuiInputBase-root",
                        }
                      }
                      disabled={true}
                      error={false}
                      id="opisName"
                      name="opisName"
                      onClick={[Function]}
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                      type="text"
                    >
                      <div
                        aria-required={false}
                        className="MuiInputBase-root Mui-disabled MuiInputBase-formControl"
                        onClick={[Function]}
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <input
                          aria-describedby=""
                          aria-invalid={false}
                          autoComplete="new-password"
                          className="MuiInputBase-input Mui-disabled"
                          disabled={true}
                          id="opisName"
                          name="opisName"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="text"
                        />
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </Input>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={5}
      md={8}
      mx={4}
      my={1}
      sm={8}
      xs={8}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
        ownerState={
          Object {
            "children": <Input
              autoComplete="new-password"
              description=""
              disabled={false}
              error={false}
              id="productNm"
              label="addProductFormLabels.productnamelabel"
              placeholder="addProductFormLabels.productnameplaceholder"
              required={true}
              type="text"
              width="100%"
            />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 5,
            "md": 8,
            "rowSpacing": 0,
            "sm": 8,
            "sx": Object {
              "mx": 4,
              "my": 1,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 8,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
            "my": 1,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
        >
          <Input
            autoComplete="new-password"
            description=""
            disabled={false}
            error={false}
            id="productNm"
            label="addProductFormLabels.productnamelabel"
            placeholder="addProductFormLabels.productnameplaceholder"
            required={true}
            type="text"
            width="100%"
          >
            <WithStyles(ForwardRef(FormControl))
              className="formInput"
            >
              <ForwardRef(FormControl)
                className="formInput"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
              >
                <div
                  className="MuiFormControl-root formInput"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    aria-labelledby="addProductFormLabels.productnamelabel"
                    aria-required={true}
                    htmlFor="productNm"
                    shrink={true}
                    style={
                      Object {
                        "color": "var(--Darkgray)",
                      }
                    }
                  >
                    <ForwardRef(InputLabel)
                      aria-labelledby="addProductFormLabels.productnamelabel"
                      aria-required={true}
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="productNm"
                      shrink={true}
                      style={
                        Object {
                          "color": "var(--Darkgray)",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        aria-labelledby="addProductFormLabels.productnamelabel"
                        aria-required={true}
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={true}
                        htmlFor="productNm"
                        style={
                          Object {
                            "color": "var(--Darkgray)",
                          }
                        }
                      >
                        <ForwardRef(FormLabel)
                          aria-labelledby="addProductFormLabels.productnamelabel"
                          aria-required={true}
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={true}
                          htmlFor="productNm"
                          style={
                            Object {
                              "color": "var(--Darkgray)",
                            }
                          }
                        >
                          <label
                            aria-labelledby="addProductFormLabels.productnamelabel"
                            aria-required={true}
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                            data-shrink={true}
                            htmlFor="productNm"
                            style={
                              Object {
                                "color": "var(--Darkgray)",
                              }
                            }
                          >
                            <b>
                              ADDPRODUCTFORMLABELS.PRODUCTNAMELABEL
                              <span
                                className="super"
                              >
                                *
                              </span>
                            </b>
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(InputBase))
                    aria-describedby=""
                    aria-required={true}
                    autoComplete="new-password"
                    disabled={false}
                    error={false}
                    id="productNm"
                    placeholder="addProductFormLabels.productnameplaceholder"
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                    type="text"
                  >
                    <ForwardRef(InputBase)
                      aria-describedby=""
                      aria-required={true}
                      autoComplete="new-password"
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense",
                          "multiline": "MuiInputBase-multiline",
                          "root": "MuiInputBase-root",
                        }
                      }
                      disabled={false}
                      error={false}
                      id="productNm"
                      placeholder="addProductFormLabels.productnameplaceholder"
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                      type="text"
                    >
                      <div
                        aria-required={true}
                        className="MuiInputBase-root MuiInputBase-formControl"
                        onClick={[Function]}
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <input
                          aria-describedby=""
                          aria-invalid={false}
                          autoComplete="new-password"
                          className="MuiInputBase-input"
                          disabled={false}
                          id="productNm"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="addProductFormLabels.productnameplaceholder"
                          required={false}
                          type="text"
                        />
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </Input>
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      lg={12}
      md={12}
      mx={4}
      sm={12}
      xs={12}
    >
      <MuiGridRoot
        as="div"
        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12"
        ownerState={
          Object {
            "children": <hr />,
            "columnSpacing": 0,
            "columns": 12,
            "container": false,
            "direction": "row",
            "item": true,
            "lg": 12,
            "md": 12,
            "rowSpacing": 0,
            "sm": 12,
            "sx": Object {
              "mx": 4,
            },
            "wrap": "wrap",
            "xl": false,
            "xs": 12,
            "zeroMinWidth": false,
          }
        }
        sx={
          Object {
            "mx": 4,
          }
        }
      >
        <div
          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12 css-1ylecwu-MuiGrid-root"
        >
          <hr />
        </div>
      </MuiGridRoot>
    </ForwardRef(Grid)>
  </OpisRackCity>
   
</QueryClientProvider>
`;
