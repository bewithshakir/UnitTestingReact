// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering of Add product in Parking lot Add product snapshot testing 1`] = `
<QueryClientProvider
  client={
    QueryClient {
      "defaultOptions": Object {},
      "mutationCache": MutationCache {
        "config": Object {},
        "listeners": Array [],
        "mutationId": 0,
        "mutations": Array [],
      },
      "mutationDefaults": Array [],
      "queryCache": QueryCache {
        "config": Object {},
        "listeners": Array [],
        "queries": Array [
          Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getPricingModel\\"]",
                  "queryKey": Array [
                    "getPricingModel",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getPricingModel\\"]",
                  "queryKey": Array [
                    "getPricingModel",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getPricingModel\\"]",
              "queryKey": Array [
                "getPricingModel",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getPricingModel\\"]",
            "queryKey": Array [
              "getPricingModel",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductTypes\\"]",
                  "queryKey": Array [
                    "getProductTypes",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductTypes\\"]",
                  "queryKey": Array [
                    "getProductTypes",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getProductTypes\\"]",
              "queryKey": Array [
                "getProductTypes",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getProductTypes\\"]",
            "queryKey": Array [
              "getProductTypes",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductNames\\",\\"\\"]",
                  "queryKey": Array [
                    "getProductNames",
                    "",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductNames\\",\\"\\"]",
                  "queryKey": Array [
                    "getProductNames",
                    "",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getProductNames\\",\\"\\"]",
              "queryKey": Array [
                "getProductNames",
                "",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getProductNames\\",\\"\\"]",
            "queryKey": Array [
              "getProductNames",
              "",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "onError": [Function],
                  "onSuccess": [Function],
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
                  "queryKey": Array [
                    "getLotProductDetails",
                    "",
                    "",
                    [Function],
                    [Function],
                  ],
                  "retry": false,
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "onError": [Function],
                  "onSuccess": [Function],
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
                  "queryKey": Array [
                    "getLotProductDetails",
                    "",
                    "",
                    [Function],
                    [Function],
                  ],
                  "retry": false,
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "onError": [Function],
              "onSuccess": [Function],
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
              "queryKey": Array [
                "getLotProductDetails",
                "",
                "",
                [Function],
                [Function],
              ],
              "retry": false,
            },
            "promise": Promise {},
            "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
            "queryKey": Array [
              "getLotProductDetails",
              "",
              "",
              [Function],
              [Function],
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
        ],
        "queriesMap": Object {
          "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]": Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "onError": [Function],
                  "onSuccess": [Function],
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
                  "queryKey": Array [
                    "getLotProductDetails",
                    "",
                    "",
                    [Function],
                    [Function],
                  ],
                  "retry": false,
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "onError": [Function],
                  "onSuccess": [Function],
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
                  "queryKey": Array [
                    "getLotProductDetails",
                    "",
                    "",
                    [Function],
                    [Function],
                  ],
                  "retry": false,
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "onError": [Function],
              "onSuccess": [Function],
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
              "queryKey": Array [
                "getLotProductDetails",
                "",
                "",
                [Function],
                [Function],
              ],
              "retry": false,
            },
            "promise": Promise {},
            "queryHash": "[\\"getLotProductDetails\\",\\"\\",\\"\\",null,null]",
            "queryKey": Array [
              "getLotProductDetails",
              "",
              "",
              [Function],
              [Function],
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          "[\\"getPricingModel\\"]": Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getPricingModel\\"]",
                  "queryKey": Array [
                    "getPricingModel",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getPricingModel\\"]",
                  "queryKey": Array [
                    "getPricingModel",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getPricingModel\\"]",
              "queryKey": Array [
                "getPricingModel",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getPricingModel\\"]",
            "queryKey": Array [
              "getPricingModel",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          "[\\"getProductNames\\",\\"\\"]": Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductNames\\",\\"\\"]",
                  "queryKey": Array [
                    "getProductNames",
                    "",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductNames\\",\\"\\"]",
                  "queryKey": Array [
                    "getProductNames",
                    "",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getProductNames\\",\\"\\"]",
              "queryKey": Array [
                "getProductNames",
                "",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getProductNames\\",\\"\\"]",
            "queryKey": Array [
              "getProductNames",
              "",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
          "[\\"getProductTypes\\"]": Query {
            "cache": [Circular],
            "cacheTime": 300000,
            "defaultOptions": undefined,
            "gcTimeout": undefined,
            "initialState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "observers": Array [
              QueryObserver {
                "client": [Circular],
                "currentQuery": [Circular],
                "currentQueryInitialState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": false,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "idle",
                },
                "currentResult": Object {
                  "data": undefined,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdatedAt": 0,
                  "failureCount": 0,
                  "isError": false,
                  "isFetched": false,
                  "isFetchedAfterMount": false,
                  "isFetching": true,
                  "isIdle": false,
                  "isLoading": true,
                  "isLoadingError": false,
                  "isPlaceholderData": false,
                  "isPreviousData": false,
                  "isRefetchError": false,
                  "isStale": true,
                  "isSuccess": false,
                  "refetch": [Function],
                  "remove": [Function],
                  "status": "loading",
                },
                "currentResultOptions": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductTypes\\"]",
                  "queryKey": Array [
                    "getProductTypes",
                  ],
                },
                "currentResultState": Object {
                  "data": undefined,
                  "dataUpdateCount": 0,
                  "dataUpdatedAt": 0,
                  "error": null,
                  "errorUpdateCount": 0,
                  "errorUpdatedAt": 0,
                  "fetchFailureCount": 0,
                  "fetchMeta": null,
                  "isFetching": true,
                  "isInvalidated": false,
                  "isPaused": false,
                  "status": "loading",
                },
                "listeners": Array [
                  [Function],
                ],
                "options": Object {
                  "_defaulted": true,
                  "optimisticResults": true,
                  "queryFn": [Function],
                  "queryHash": "[\\"getProductTypes\\"]",
                  "queryKey": Array [
                    "getProductTypes",
                  ],
                },
                "previousQueryResult": undefined,
                "previousSelectError": null,
                "refetch": [Function],
                "refetchIntervalId": undefined,
                "remove": [Function],
                "staleTimeoutId": undefined,
                "trackedProps": Array [],
              },
            ],
            "options": Object {
              "_defaulted": true,
              "optimisticResults": true,
              "queryFn": [Function],
              "queryHash": "[\\"getProductTypes\\"]",
              "queryKey": Array [
                "getProductTypes",
              ],
            },
            "promise": Promise {},
            "queryHash": "[\\"getProductTypes\\"]",
            "queryKey": Array [
              "getProductTypes",
            ],
            "retryer": Retryer {
              "cancel": [Function],
              "cancelRetry": [Function],
              "continue": [Function],
              "failureCount": 0,
              "isPaused": false,
              "isResolved": false,
              "isTransportCancelable": false,
              "promise": Promise {},
            },
            "revertState": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": false,
              "isInvalidated": false,
              "isPaused": false,
              "status": "idle",
            },
            "state": Object {
              "data": undefined,
              "dataUpdateCount": 0,
              "dataUpdatedAt": 0,
              "error": null,
              "errorUpdateCount": 0,
              "errorUpdatedAt": 0,
              "fetchFailureCount": 0,
              "fetchMeta": null,
              "isFetching": true,
              "isInvalidated": false,
              "isPaused": false,
              "status": "loading",
            },
          },
        },
      },
      "queryDefaults": Array [],
      "unsubscribeFocus": [Function],
      "unsubscribeOnline": [Function],
    }
  }
>
   
  <AddProduct
    disableAddEditButton={false}
    isHiddenAddEditRow={false}
    lotId=""
    productId=""
  >
    <form
      className="productForm"
      onBlur={[Function]}
      onSubmit={[Function]}
    >
      <ForwardRef(Grid)
        className="productContainer"
        container={true}
        direction="column"
      >
        <MuiGridRoot
          as="div"
          className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined MuiGrid-direction-xs-column productContainer"
          ownerState={
            Object {
              "children": Array [
                <ForwardRef(Grid)
                  container={true}
                  item={true}
                  lg={12}
                  md={12}
                  sm={12}
                  xs={12}
                >
                  <React.Fragment>
                    <ForwardRef(Grid)
                      item={true}
                      lg={6}
                      md={6}
                      mx={4}
                      my={1}
                      sm={8}
                      xs={8}
                    >
                      <b>
                        Add New Product or select the product from the table to edit the details
                      </b>
                    </ForwardRef(Grid)>
                    <ForwardRef(Grid)
                      item={true}
                      lg={4}
                      md={6}
                      mx={4}
                      my={1}
                      sm={8}
                      xs={8}
                    >
                      <Button
                        aria-label="primary"
                        className="addProductBtn"
                        disabled={false}
                        startIcon={<Memo />}
                        types="primary"
                      >
                        Add Product
                      </Button>
                      <Button
                        aria-label="edit"
                        className="editProduct"
                        disabled={false}
                        startIcon={<EditIcon />}
                        types="edit"
                      >
                        Edit
                      </Button>
                    </ForwardRef(Grid)>
                  </React.Fragment>
                  <ForwardRef(Grid)
                    item={true}
                    md={12}
                    mx={4}
                  >
                    <ForwardRef(Typography)
                      className="fw-bold"
                      color="var(--Darkgray)"
                      gutterBottom={true}
                      mb={1}
                      variant="h4"
                    >
                      General Information
                    </ForwardRef(Typography)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={5}
                    md={8}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <SingleSelect
                      error={false}
                      id="productType"
                      isDisabled={false}
                      items={Array []}
                      label="PRODUCT TYPE"
                      name="productType"
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder="Select one"
                      required={true}
                      value={
                        Object {
                          "label": "",
                          "value": "",
                        }
                      }
                    />
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={5}
                    md={8}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <SingleSelect
                      error={false}
                      id="masterProductName"
                      isDisabled={false}
                      items={Array []}
                      label="Master Product Name"
                      name="masterProductName"
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder="Select Master Product Name"
                      required={true}
                      value={
                        Object {
                          "label": "",
                          "value": "",
                        }
                      }
                    />
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={5}
                    md={8}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <SingleSelect
                      error={false}
                      id="pricingModel"
                      isDisabled={false}
                      items={Array []}
                      label="Pricing Model"
                      name="pricingModel"
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder="Select one"
                      required={true}
                      value={
                        Object {
                          "label": "",
                          "value": "",
                        }
                      }
                    />
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={12}
                    md={12}
                    mx={4}
                    sm={12}
                    xs={12}
                  >
                    <hr />
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>,
                <ForwardRef(Grid)
                  className="lastItem"
                  container={true}
                  item={true}
                  lg={12}
                  md={12}
                  px={4}
                  py={4}
                  sm={12}
                  xs={12}
                >
                  <ForwardRef(Grid)
                    item={true}
                    lg={12}
                    md={12}
                    px={4}
                    py={4}
                    sm={12}
                    textAlign="right"
                    xs={12}
                  >
                    <Button
                      aria-label="cancel"
                      className="mr-4"
                      onClick={[Function]}
                      types="cancel"
                    >
                      buttons.cancel
                    </Button>
                    <Button
                      aria-label="save"
                      className="mr-4 ml-4 saveProduct"
                      disabled={true}
                      type="submit"
                      types="save"
                    >
                      buttons.save
                    </Button>
                    <ToastMessage
                      isOpen={false}
                      message=""
                      messageType=""
                      onClose={[Function]}
                    />
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>,
              ],
              "className": "productContainer",
              "columnSpacing": 0,
              "columns": 12,
              "container": true,
              "direction": "column",
              "item": false,
              "lg": false,
              "md": false,
              "rowSpacing": 0,
              "sm": false,
              "sx": Object {},
              "wrap": "wrap",
              "xl": false,
              "xs": false,
              "zeroMinWidth": false,
            }
          }
          sx={Object {}}
        >
          <div
            className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined MuiGrid-direction-xs-column productContainer css-1vpwcmr-MuiGrid-root"
          >
            <ForwardRef(Grid)
              container={true}
              item={true}
              lg={12}
              md={12}
              sm={12}
              xs={12}
            >
              <MuiGridRoot
                as="div"
                className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-spacing-xs-undefined MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12"
                ownerState={
                  Object {
                    "children": Array [
                      <React.Fragment>
                        <ForwardRef(Grid)
                          item={true}
                          lg={6}
                          md={6}
                          mx={4}
                          my={1}
                          sm={8}
                          xs={8}
                        >
                          <b>
                            Add New Product or select the product from the table to edit the details
                          </b>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          lg={4}
                          md={6}
                          mx={4}
                          my={1}
                          sm={8}
                          xs={8}
                        >
                          <Button
                            aria-label="primary"
                            className="addProductBtn"
                            disabled={false}
                            startIcon={<Memo />}
                            types="primary"
                          >
                            Add Product
                          </Button>
                          <Button
                            aria-label="edit"
                            className="editProduct"
                            disabled={false}
                            startIcon={<EditIcon />}
                            types="edit"
                          >
                            Edit
                          </Button>
                        </ForwardRef(Grid)>
                      </React.Fragment>,
                      <ForwardRef(Grid)
                        item={true}
                        md={12}
                        mx={4}
                      >
                        <ForwardRef(Typography)
                          className="fw-bold"
                          color="var(--Darkgray)"
                          gutterBottom={true}
                          mb={1}
                          variant="h4"
                        >
                          General Information
                        </ForwardRef(Typography)>
                      </ForwardRef(Grid)>,
                      <ForwardRef(Grid)
                        item={true}
                        lg={5}
                        md={8}
                        mx={4}
                        my={1}
                        sm={8}
                        xs={8}
                      >
                        <SingleSelect
                          error={false}
                          id="productType"
                          isDisabled={false}
                          items={Array []}
                          label="PRODUCT TYPE"
                          name="productType"
                          onBlur={[Function]}
                          onChange={[Function]}
                          placeholder="Select one"
                          required={true}
                          value={
                            Object {
                              "label": "",
                              "value": "",
                            }
                          }
                        />
                      </ForwardRef(Grid)>,
                      <ForwardRef(Grid)
                        item={true}
                        lg={5}
                        md={8}
                        mx={4}
                        my={1}
                        sm={8}
                        xs={8}
                      >
                        <SingleSelect
                          error={false}
                          id="masterProductName"
                          isDisabled={false}
                          items={Array []}
                          label="Master Product Name"
                          name="masterProductName"
                          onBlur={[Function]}
                          onChange={[Function]}
                          placeholder="Select Master Product Name"
                          required={true}
                          value={
                            Object {
                              "label": "",
                              "value": "",
                            }
                          }
                        />
                      </ForwardRef(Grid)>,
                      <ForwardRef(Grid)
                        item={true}
                        lg={5}
                        md={8}
                        mx={4}
                        my={1}
                        sm={8}
                        xs={8}
                      >
                        <SingleSelect
                          error={false}
                          id="pricingModel"
                          isDisabled={false}
                          items={Array []}
                          label="Pricing Model"
                          name="pricingModel"
                          onBlur={[Function]}
                          onChange={[Function]}
                          placeholder="Select one"
                          required={true}
                          value={
                            Object {
                              "label": "",
                              "value": "",
                            }
                          }
                        />
                      </ForwardRef(Grid)>,
                      <ForwardRef(Grid)
                        item={true}
                        lg={12}
                        md={12}
                        mx={4}
                        sm={12}
                        xs={12}
                      >
                        <hr />
                      </ForwardRef(Grid)>,
                      false,
                    ],
                    "columnSpacing": 0,
                    "columns": 12,
                    "container": true,
                    "direction": "row",
                    "item": true,
                    "lg": 12,
                    "md": 12,
                    "rowSpacing": 0,
                    "sm": 12,
                    "sx": Object {},
                    "wrap": "wrap",
                    "xl": false,
                    "xs": 12,
                    "zeroMinWidth": false,
                  }
                }
                sx={Object {}}
              >
                <div
                  className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-spacing-xs-undefined MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12 css-ofhni-MuiGrid-root"
                >
                  <ForwardRef(Grid)
                    item={true}
                    lg={6}
                    md={6}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-6 MuiGrid-grid-lg-6"
                      ownerState={
                        Object {
                          "children": <b>
                            Add New Product or select the product from the table to edit the details
                          </b>,
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": 6,
                          "md": 6,
                          "rowSpacing": 0,
                          "sm": 8,
                          "sx": Object {
                            "mx": 4,
                            "my": 1,
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 8,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "mx": 4,
                          "my": 1,
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-6 MuiGrid-grid-lg-6 css-2bvao5-MuiGrid-root"
                      >
                        <b>
                          Add New Product or select the product from the table to edit the details
                        </b>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={4}
                    md={6}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-6 MuiGrid-grid-lg-4"
                      ownerState={
                        Object {
                          "children": Array [
                            <Button
                              aria-label="primary"
                              className="addProductBtn"
                              disabled={false}
                              startIcon={<Memo />}
                              types="primary"
                            >
                              Add Product
                            </Button>,
                            <Button
                              aria-label="edit"
                              className="editProduct"
                              disabled={false}
                              startIcon={<EditIcon />}
                              types="edit"
                            >
                              Edit
                            </Button>,
                          ],
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": 4,
                          "md": 6,
                          "rowSpacing": 0,
                          "sm": 8,
                          "sx": Object {
                            "mx": 4,
                            "my": 1,
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 8,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "mx": 4,
                          "my": 1,
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-6 MuiGrid-grid-lg-4 css-1q7xysd-MuiGrid-root"
                      >
                        <Button
                          aria-label="primary"
                          className="addProductBtn"
                          disabled={false}
                          startIcon={<Memo />}
                          types="primary"
                        >
                          <WithStyles(ForwardRef(Button))
                            aria-label="primary"
                            className="btn-primary addProductBtn"
                            disabled={false}
                            startIcon={<Memo />}
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              aria-label="primary"
                              className="btn-primary addProductBtn"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              disabled={false}
                              startIcon={<Memo />}
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="primary"
                                className="MuiButton-root MuiButton-contained btn-primary addProductBtn"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="primary"
                                  className="MuiButton-root MuiButton-contained btn-primary addProductBtn"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  type="button"
                                >
                                  <button
                                    aria-label="primary"
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained btn-primary addProductBtn"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef(AddIcon)>
                                          <ForwardRef(SvgIcon)
                                            data-testid="AddIcon"
                                          >
                                            <MuiSvgIconRoot
                                              aria-hidden={true}
                                              as="svg"
                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                              data-testid="AddIcon"
                                              focusable="false"
                                              ownerState={
                                                Object {
                                                  "children": <path
                                                    d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                  />,
                                                  "color": "inherit",
                                                  "component": "svg",
                                                  "data-testid": "AddIcon",
                                                  "fontSize": "medium",
                                                  "viewBox": "0 0 24 24",
                                                }
                                              }
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                data-testid="AddIcon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                />
                                              </svg>
                                            </MuiSvgIconRoot>
                                          </ForwardRef(SvgIcon)>
                                        </ForwardRef(AddIcon)>
                                      </span>
                                      Add Product
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </Button>
                        <Button
                          aria-label="edit"
                          className="editProduct"
                          disabled={false}
                          startIcon={<EditIcon />}
                          types="edit"
                        >
                          <WithStyles(ForwardRef(Button))
                            aria-label="edit"
                            className="btn-edit editProduct"
                            disabled={false}
                            startIcon={<EditIcon />}
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              aria-label="edit"
                              className="btn-edit editProduct"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              disabled={false}
                              startIcon={<EditIcon />}
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="edit"
                                className="MuiButton-root MuiButton-contained btn-edit editProduct"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="edit"
                                  className="MuiButton-root MuiButton-contained btn-edit editProduct"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  type="button"
                                >
                                  <button
                                    aria-label="edit"
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained btn-edit editProduct"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <EditIcon>
                                          <svg
                                            height="20"
                                            viewBox="0 0 20 20"
                                            width="20"
                                          >
                                            <g
                                              data-name="Group 1868"
                                              transform="translate(-892 -1528)"
                                            >
                                              <path
                                                d="M17.261 2.146l4.95 4.95-12.021 12.02L2.212 22l3.029-7.833zM6.786 15.713L5.66 18.627l2.968-1.073zM19.382 7.1L17.26 4.974l-9.191 9.193 2.12 2.12 5.657-5.657-2.12-2.12L15.14 7.1l2.12 2.12z"
                                                fill="currentColor"
                                                transform="translate(889.788 1525.854)"
                                              />
                                              <path
                                                d="M0 0H20V20H0z"
                                                data-name="Rectangle 2255"
                                                fill="none"
                                                transform="translate(892 1528)"
                                              />
                                            </g>
                                          </svg>
                                        </EditIcon>
                                      </span>
                                      Edit
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </Button>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    md={12}
                    mx={4}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-md-12"
                      ownerState={
                        Object {
                          "children": <ForwardRef(Typography)
                            className="fw-bold"
                            color="var(--Darkgray)"
                            gutterBottom={true}
                            mb={1}
                            variant="h4"
                          >
                            General Information
                          </ForwardRef(Typography)>,
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": false,
                          "md": 12,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "mx": 4,
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": false,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "mx": 4,
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-md-12 css-15r53x7-MuiGrid-root"
                      >
                        <ForwardRef(Typography)
                          className="fw-bold"
                          color="var(--Darkgray)"
                          gutterBottom={true}
                          mb={1}
                          variant="h4"
                        >
                          <MuiTypographyRoot
                            as="h4"
                            className="MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom fw-bold"
                            ownerState={
                              Object {
                                "align": "inherit",
                                "children": "General Information",
                                "className": "fw-bold",
                                "color": "var(--Darkgray)",
                                "component": undefined,
                                "gutterBottom": true,
                                "noWrap": false,
                                "paragraph": false,
                                "sx": Object {
                                  "color": "var(--Darkgray)",
                                  "mb": 1,
                                },
                                "variant": "h4",
                                "variantMapping": Object {
                                  "body1": "p",
                                  "body2": "p",
                                  "h1": "h1",
                                  "h2": "h2",
                                  "h3": "h3",
                                  "h4": "h4",
                                  "h5": "h5",
                                  "h6": "h6",
                                  "inherit": "p",
                                  "subtitle1": "h6",
                                  "subtitle2": "h6",
                                },
                              }
                            }
                            sx={
                              Object {
                                "color": "var(--Darkgray)",
                                "mb": 1,
                              }
                            }
                          >
                            <h4
                              className="MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom fw-bold css-1t4klde-MuiTypography-root"
                            >
                              General Information
                            </h4>
                          </MuiTypographyRoot>
                        </ForwardRef(Typography)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={5}
                    md={8}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
                      ownerState={
                        Object {
                          "children": <SingleSelect
                            error={false}
                            id="productType"
                            isDisabled={false}
                            items={Array []}
                            label="PRODUCT TYPE"
                            name="productType"
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="Select one"
                            required={true}
                            value={
                              Object {
                                "label": "",
                                "value": "",
                              }
                            }
                          />,
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": 5,
                          "md": 8,
                          "rowSpacing": 0,
                          "sm": 8,
                          "sx": Object {
                            "mx": 4,
                            "my": 1,
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 8,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "mx": 4,
                          "my": 1,
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
                      >
                        <SingleSelect
                          error={false}
                          id="productType"
                          isDisabled={false}
                          items={Array []}
                          label="PRODUCT TYPE"
                          name="productType"
                          onBlur={[Function]}
                          onChange={[Function]}
                          placeholder="Select one"
                          required={true}
                          value={
                            Object {
                              "label": "",
                              "value": "",
                            }
                          }
                        >
                          <ForwardRef(FormControl)
                            className="select"
                          >
                            <MuiFormControlRoot
                              as="div"
                              className="MuiFormControl-root select"
                              ownerState={
                                Object {
                                  "children": Array [
                                    <ForwardRef(InputLabel)
                                      aria-labelledby="PRODUCT TYPE"
                                      aria-required={true}
                                      htmlFor="productType-label"
                                      shrink={true}
                                      style={
                                        Object {
                                          "color": "var(--Darkgray)",
                                        }
                                      }
                                    >
                                      <b>
                                        PRODUCT TYPE
                                        <span
                                          className="super"
                                        >
                                          * 
                                        </span>
                                      </b>
                                    </ForwardRef(InputLabel)>,
                                    <ForwardRef
                                      className="react-select-container"
                                      classNamePrefix="react-select"
                                      components={
                                        Object {
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "Option": [Function],
                                          "SingleValue": [Function],
                                        }
                                      }
                                      id="productType"
                                      isDisabled={false}
                                      isSearchable={false}
                                      name="productType"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      options={Array []}
                                      placeholder="Select one"
                                      value={
                                        Object {
                                          "label": "",
                                          "value": "",
                                        }
                                      }
                                    />,
                                    undefined,
                                  ],
                                  "className": "select",
                                  "color": "primary",
                                  "component": "div",
                                  "disabled": false,
                                  "error": false,
                                  "fullWidth": false,
                                  "hiddenLabel": false,
                                  "margin": "none",
                                  "required": false,
                                  "size": "medium",
                                  "variant": "outlined",
                                }
                              }
                            >
                              <div
                                className="MuiFormControl-root select css-1nrlq1o-MuiFormControl-root"
                              >
                                <ForwardRef(InputLabel)
                                  aria-labelledby="PRODUCT TYPE"
                                  aria-required={true}
                                  htmlFor="productType-label"
                                  shrink={true}
                                  style={
                                    Object {
                                      "color": "var(--Darkgray)",
                                    }
                                  }
                                >
                                  <MuiInputLabelRoot
                                    aria-labelledby="PRODUCT TYPE"
                                    aria-required={true}
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={true}
                                    htmlFor="productType-label"
                                    ownerState={
                                      Object {
                                        "aria-labelledby": "PRODUCT TYPE",
                                        "aria-required": true,
                                        "children": <b>
                                          PRODUCT TYPE
                                          <span
                                            className="super"
                                          >
                                            * 
                                          </span>
                                        </b>,
                                        "disableAnimation": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": false,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": false,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "htmlFor": "productType-label",
                                        "required": false,
                                        "shrink": true,
                                        "size": "medium",
                                        "style": Object {
                                          "color": "var(--Darkgray)",
                                        },
                                        "variant": "outlined",
                                      }
                                    }
                                    style={
                                      Object {
                                        "color": "var(--Darkgray)",
                                      }
                                    }
                                  >
                                    <ForwardRef(FormLabel)
                                      aria-labelledby="PRODUCT TYPE"
                                      aria-required={true}
                                      className="css-1bzvmy4-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="productType-label"
                                      style={
                                        Object {
                                          "color": "var(--Darkgray)",
                                        }
                                      }
                                    >
                                      <MuiFormLabelRoot
                                        aria-labelledby="PRODUCT TYPE"
                                        aria-required={true}
                                        as="label"
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1bzvmy4-MuiInputLabel-root"
                                        classes={
                                          Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="productType-label"
                                        ownerState={
                                          Object {
                                            "aria-labelledby": "PRODUCT TYPE",
                                            "aria-required": true,
                                            "children": <b>
                                              PRODUCT TYPE
                                              <span
                                                className="super"
                                              >
                                                * 
                                              </span>
                                            </b>,
                                            "className": "css-1bzvmy4-MuiInputLabel-root",
                                            "classes": Object {
                                              "asterisk": "",
                                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                            },
                                            "color": "primary",
                                            "component": "label",
                                            "data-shrink": true,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "htmlFor": "productType-label",
                                            "required": false,
                                            "style": Object {
                                              "color": "var(--Darkgray)",
                                            },
                                          }
                                        }
                                        style={
                                          Object {
                                            "color": "var(--Darkgray)",
                                          }
                                        }
                                      >
                                        <label
                                          aria-labelledby="PRODUCT TYPE"
                                          aria-required={true}
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1kty9di-MuiFormLabel-root-MuiInputLabel-root"
                                          data-shrink={true}
                                          htmlFor="productType-label"
                                          style={
                                            Object {
                                              "color": "var(--Darkgray)",
                                            }
                                          }
                                        >
                                          <b>
                                            PRODUCT TYPE
                                            <span
                                              className="super"
                                            >
                                              * 
                                            </span>
                                          </b>
                                        </label>
                                      </MuiFormLabelRoot>
                                    </ForwardRef(FormLabel)>
                                  </MuiInputLabelRoot>
                                </ForwardRef(InputLabel)>
                                <ForwardRef
                                  className="react-select-container"
                                  classNamePrefix="react-select"
                                  components={
                                    Object {
                                      "DropdownIndicator": [Function],
                                      "IndicatorSeparator": [Function],
                                      "Option": [Function],
                                      "SingleValue": [Function],
                                    }
                                  }
                                  id="productType"
                                  isDisabled={false}
                                  isSearchable={false}
                                  name="productType"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  options={Array []}
                                  placeholder="Select one"
                                  value={
                                    Object {
                                      "label": "",
                                      "value": "",
                                    }
                                  }
                                >
                                  <Select
                                    aria-live="polite"
                                    backspaceRemovesValue={true}
                                    blurInputOnSelect={true}
                                    captureMenuScroll={false}
                                    className="react-select-container"
                                    classNamePrefix="react-select"
                                    closeMenuOnScroll={false}
                                    closeMenuOnSelect={true}
                                    components={
                                      Object {
                                        "DropdownIndicator": [Function],
                                        "IndicatorSeparator": [Function],
                                        "Option": [Function],
                                        "SingleValue": [Function],
                                      }
                                    }
                                    controlShouldRenderValue={true}
                                    escapeClearsValue={false}
                                    filterOption={[Function]}
                                    formatGroupLabel={[Function]}
                                    getOptionLabel={[Function]}
                                    getOptionValue={[Function]}
                                    id="productType"
                                    inputValue=""
                                    isDisabled={false}
                                    isLoading={false}
                                    isMulti={false}
                                    isOptionDisabled={[Function]}
                                    isRtl={false}
                                    isSearchable={false}
                                    loadingMessage={[Function]}
                                    maxMenuHeight={300}
                                    menuIsOpen={false}
                                    menuPlacement="bottom"
                                    menuPosition="absolute"
                                    menuShouldBlockScroll={false}
                                    menuShouldScrollIntoView={true}
                                    minMenuHeight={140}
                                    name="productType"
                                    noOptionsMessage={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onInputChange={[Function]}
                                    onKeyDown={[Function]}
                                    onMenuClose={[Function]}
                                    onMenuOpen={[Function]}
                                    openMenuOnClick={true}
                                    openMenuOnFocus={false}
                                    options={Array []}
                                    pageSize={5}
                                    placeholder="Select one"
                                    screenReaderStatus={[Function]}
                                    styles={Object {}}
                                    tabIndex={0}
                                    tabSelectsValue={true}
                                    value={
                                      Object {
                                        "label": "",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <SelectContainer
                                      className="react-select-container"
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      innerProps={
                                        Object {
                                          "id": "productType",
                                          "onKeyDown": [Function],
                                        }
                                      }
                                      isDisabled={false}
                                      isFocused={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={Array []}
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "aria-live": "polite",
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "react-select-container",
                                          "classNamePrefix": "react-select",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "Option": [Function],
                                            "SingleValue": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "id": "productType",
                                          "inputValue": "",
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": false,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "name": "productType",
                                          "noOptionsMessage": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onKeyDown": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [],
                                          "pageSize": 5,
                                          "placeholder": "Select one",
                                          "screenReaderStatus": [Function],
                                          "styles": Object {},
                                          "tabIndex": 0,
                                          "tabSelectsValue": true,
                                          "value": Object {
                                            "label": "",
                                            "value": "",
                                          },
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#DE350B",
                                            "dangerLight": "#FFBDAD",
                                            "neutral0": "hsl(0, 0%, 100%)",
                                            "neutral10": "hsl(0, 0%, 90%)",
                                            "neutral20": "hsl(0, 0%, 80%)",
                                            "neutral30": "hsl(0, 0%, 70%)",
                                            "neutral40": "hsl(0, 0%, 60%)",
                                            "neutral5": "hsl(0, 0%, 95%)",
                                            "neutral50": "hsl(0, 0%, 50%)",
                                            "neutral60": "hsl(0, 0%, 40%)",
                                            "neutral70": "hsl(0, 0%, 30%)",
                                            "neutral80": "hsl(0, 0%, 20%)",
                                            "neutral90": "hsl(0, 0%, 10%)",
                                            "primary": "#2684FF",
                                            "primary25": "#DEEBFF",
                                            "primary50": "#B2D4FF",
                                            "primary75": "#4C9AFF",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <EmotionCssPropInternal
                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                        className="react-select-container"
                                        css={
                                          Object {
                                            "boxSizing": "border-box",
                                            "direction": undefined,
                                            "label": "container",
                                            "pointerEvents": undefined,
                                            "position": "relative",
                                          }
                                        }
                                        id="productType"
                                        onKeyDown={[Function]}
                                      >
                                        <div
                                          className="react-select-container css-b62m3t-container"
                                          id="productType"
                                          onKeyDown={[Function]}
                                        >
                                          <LiveRegion
                                            ariaSelection={null}
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            focusableOptions={Array []}
                                            focusedOption={null}
                                            focusedValue={null}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            id="react-select-2-live-region"
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "react-select-container",
                                                "classNamePrefix": "react-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "Option": [Function],
                                                  "SingleValue": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "id": "productType",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "productType",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onKeyDown": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select one",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              }
                                            }
                                            selectValue={
                                              Array [
                                                Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              ]
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <A11yText
                                              id="react-select-2-live-region"
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                css={
                                                  Object {
                                                    "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                    "name": "1f43avz-a11yText-A11yText",
                                                    "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                    "toString": [Function],
                                                  }
                                                }
                                                id="react-select-2-live-region"
                                              >
                                                <span
                                                  className="css-1f43avz-a11yText-A11yText"
                                                  id="react-select-2-live-region"
                                                />
                                              </EmotionCssPropInternal>
                                            </A11yText>
                                            <A11yText
                                              aria-atomic="false"
                                              aria-live="polite"
                                              aria-relevant="additions text"
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                aria-atomic="false"
                                                aria-live="polite"
                                                aria-relevant="additions text"
                                                css={
                                                  Object {
                                                    "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                    "name": "1f43avz-a11yText-A11yText",
                                                    "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                    "toString": [Function],
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-atomic="false"
                                                  aria-live="polite"
                                                  aria-relevant="additions text"
                                                  className="css-1f43avz-a11yText-A11yText"
                                                />
                                              </EmotionCssPropInternal>
                                            </A11yText>
                                          </LiveRegion>
                                          <Control
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            innerProps={
                                              Object {
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            innerRef={[Function]}
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            menuIsOpen={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "react-select-container",
                                                "classNamePrefix": "react-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "Option": [Function],
                                                  "SingleValue": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "id": "productType",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "productType",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onKeyDown": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select one",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              className="react-select__control"
                                              css={
                                                Object {
                                                  "&:hover": Object {
                                                    "borderColor": "hsl(0, 0%, 70%)",
                                                  },
                                                  "alignItems": "center",
                                                  "backgroundColor": "hsl(0, 0%, 100%)",
                                                  "borderColor": "hsl(0, 0%, 80%)",
                                                  "borderRadius": 4,
                                                  "borderStyle": "solid",
                                                  "borderWidth": 1,
                                                  "boxShadow": undefined,
                                                  "boxSizing": "border-box",
                                                  "cursor": "default",
                                                  "display": "flex",
                                                  "flexWrap": "wrap",
                                                  "justifyContent": "space-between",
                                                  "label": "control",
                                                  "minHeight": 38,
                                                  "outline": "0 !important",
                                                  "position": "relative",
                                                  "transition": "all 100ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                className="react-select__control css-1s2u09g-control"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <ValueContainer
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  isDisabled={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={Array []}
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "aria-live": "polite",
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "react-select-container",
                                                      "classNamePrefix": "react-select",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {
                                                        "DropdownIndicator": [Function],
                                                        "IndicatorSeparator": [Function],
                                                        "Option": [Function],
                                                        "SingleValue": [Function],
                                                      },
                                                      "controlShouldRenderValue": true,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "id": "productType",
                                                      "inputValue": "",
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "bottom",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "productType",
                                                      "noOptionsMessage": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onKeyDown": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [],
                                                      "pageSize": 5,
                                                      "placeholder": "Select one",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {},
                                                      "tabIndex": 0,
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "label": "",
                                                        "value": "",
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                    className="react-select__value-container react-select__value-container--has-value"
                                                    css={
                                                      Object {
                                                        "WebkitOverflowScrolling": "touch",
                                                        "alignItems": "center",
                                                        "boxSizing": "border-box",
                                                        "display": "grid",
                                                        "flex": 1,
                                                        "flexWrap": "wrap",
                                                        "overflow": "hidden",
                                                        "padding": "2px 8px",
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="react-select__value-container react-select__value-container--has-value css-319lph-ValueContainer"
                                                    >
                                                      <SingleValueFrag
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        data={
                                                          Object {
                                                            "label": "",
                                                            "value": "",
                                                          }
                                                        }
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "productType",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "productType",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select one",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <SingleValue
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          data={
                                                            Object {
                                                              "label": "",
                                                              "value": "",
                                                            }
                                                          }
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={Array []}
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "aria-live": "polite",
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "react-select-container",
                                                              "classNamePrefix": "react-select",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {
                                                                "DropdownIndicator": [Function],
                                                                "IndicatorSeparator": [Function],
                                                                "Option": [Function],
                                                                "SingleValue": [Function],
                                                              },
                                                              "controlShouldRenderValue": true,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "id": "productType",
                                                              "inputValue": "",
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "bottom",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "productType",
                                                              "noOptionsMessage": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onKeyDown": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [],
                                                              "pageSize": 5,
                                                              "placeholder": "Select one",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {},
                                                              "tabIndex": 0,
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "label": "",
                                                                "value": "",
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <EmotionCssPropInternal
                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                            className="react-select__single-value"
                                                            css={
                                                              Object {
                                                                "boxSizing": "border-box",
                                                                "color": "hsl(0, 0%, 20%)",
                                                                "gridArea": "1 / 1 / 2 / 3",
                                                                "label": "singleValue",
                                                                "marginLeft": 2,
                                                                "marginRight": 2,
                                                                "maxWidth": "100%",
                                                                "overflow": "hidden",
                                                                "textOverflow": "ellipsis",
                                                                "whiteSpace": "nowrap",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="react-select__single-value css-qc6sy-singleValue"
                                                            >
                                                              <span
                                                                className="value-box"
                                                              >
                                                                 
                                                                <span
                                                                  className="label-text"
                                                                />
                                                              </span>
                                                            </div>
                                                          </EmotionCssPropInternal>
                                                        </SingleValue>
                                                      </SingleValueFrag>
                                                      <DummyInput
                                                        aria-autocomplete="list"
                                                        aria-controls="react-select-2-listbox"
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-owns="react-select-2-listbox"
                                                        aria-readonly={true}
                                                        disabled={false}
                                                        id="react-select-2-input"
                                                        innerRef={[Function]}
                                                        inputMode="none"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        role="combobox"
                                                        tabIndex={0}
                                                        value=""
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DummyInput"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="input"
                                                          aria-autocomplete="list"
                                                          aria-controls="react-select-2-listbox"
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-owns="react-select-2-listbox"
                                                          aria-readonly={true}
                                                          css={
                                                            Object {
                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNNIiwiZmlsZSI6IkR1bW15SW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIHJlZj17aW5uZXJSZWZ9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */",
                                                              "name": "mohuvp-dummyInput-DummyInput",
                                                              "next": undefined,
                                                              "styles": "label:dummyInput;background:0;border:0;caret-color:transparent;font-size:inherit;grid-area:1 / 1 / 2 / 3;outline:0;padding:0;width:1px;color:transparent;left:-100px;opacity:0;position:relative;transform:scale(.01);;label:DummyInput;",
                                                              "toString": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          id="react-select-2-input"
                                                          inputMode="none"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          role="combobox"
                                                          tabIndex={0}
                                                          value=""
                                                        >
                                                          <input
                                                            aria-autocomplete="list"
                                                            aria-controls="react-select-2-listbox"
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-owns="react-select-2-listbox"
                                                            aria-readonly={true}
                                                            className="css-mohuvp-dummyInput-DummyInput"
                                                            disabled={false}
                                                            id="react-select-2-input"
                                                            inputMode="none"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            tabIndex={0}
                                                            value=""
                                                          />
                                                        </EmotionCssPropInternal>
                                                      </DummyInput>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </ValueContainer>
                                                <IndicatorsContainer
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  isDisabled={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={Array []}
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "aria-live": "polite",
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "react-select-container",
                                                      "classNamePrefix": "react-select",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {
                                                        "DropdownIndicator": [Function],
                                                        "IndicatorSeparator": [Function],
                                                        "Option": [Function],
                                                        "SingleValue": [Function],
                                                      },
                                                      "controlShouldRenderValue": true,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "id": "productType",
                                                      "inputValue": "",
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "bottom",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "productType",
                                                      "noOptionsMessage": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onKeyDown": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [],
                                                      "pageSize": 5,
                                                      "placeholder": "Select one",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {},
                                                      "tabIndex": 0,
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "label": "",
                                                        "value": "",
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                    className="react-select__indicators"
                                                    css={
                                                      Object {
                                                        "alignItems": "center",
                                                        "alignSelf": "stretch",
                                                        "boxSizing": "border-box",
                                                        "display": "flex",
                                                        "flexShrink": 0,
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="react-select__indicators css-1hb7zxy-IndicatorsContainer"
                                                    >
                                                      <IndicatorSeparator
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        isDisabled={false}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "productType",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "productType",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select one",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      />
                                                      <DropdownIndicator
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        innerProps={
                                                          Object {
                                                            "aria-hidden": "true",
                                                            "onMouseDown": [Function],
                                                            "onTouchEnd": [Function],
                                                          }
                                                        }
                                                        isDisabled={false}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "productType",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "productType",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select one",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <DropdownIndicator
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          innerProps={
                                                            Object {
                                                              "aria-hidden": "true",
                                                              "onMouseDown": [Function],
                                                              "onTouchEnd": [Function],
                                                            }
                                                          }
                                                          isDisabled={false}
                                                          isFocused={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={Array []}
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "aria-live": "polite",
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "react-select-container",
                                                              "classNamePrefix": "react-select",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {
                                                                "DropdownIndicator": [Function],
                                                                "IndicatorSeparator": [Function],
                                                                "Option": [Function],
                                                                "SingleValue": [Function],
                                                              },
                                                              "controlShouldRenderValue": true,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "id": "productType",
                                                              "inputValue": "",
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "bottom",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "productType",
                                                              "noOptionsMessage": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onKeyDown": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [],
                                                              "pageSize": 5,
                                                              "placeholder": "Select one",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {},
                                                              "tabIndex": 0,
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "label": "",
                                                                "value": "",
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <EmotionCssPropInternal
                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                            aria-hidden="true"
                                                            className="react-select__indicator react-select__dropdown-indicator"
                                                            css={
                                                              Object {
                                                                ":hover": Object {
                                                                  "color": "hsl(0, 0%, 60%)",
                                                                },
                                                                "boxSizing": "border-box",
                                                                "color": "hsl(0, 0%, 80%)",
                                                                "display": "flex",
                                                                "label": "indicatorContainer",
                                                                "padding": 8,
                                                                "transition": "color 150ms",
                                                              }
                                                            }
                                                            onMouseDown={[Function]}
                                                            onTouchEnd={[Function]}
                                                          >
                                                            <div
                                                              aria-hidden="true"
                                                              className="react-select__indicator react-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                              onMouseDown={[Function]}
                                                              onTouchEnd={[Function]}
                                                            >
                                                              <ArrowDown>
                                                                <svg
                                                                  height="1em"
                                                                  viewBox="0 0 20 20"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="m1.742 5 8.628 7.844 7.821-7.812 1.413 1.418-9.17 9.159L.396 6.48Z"
                                                                    fill="var(--Gray)"
                                                                  />
                                                                  <path
                                                                    d="M0 0h20v20H0z"
                                                                    fill="none"
                                                                  />
                                                                </svg>
                                                              </ArrowDown>
                                                            </div>
                                                          </EmotionCssPropInternal>
                                                        </DropdownIndicator>
                                                      </DropdownIndicator>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </IndicatorsContainer>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </Control>
                                          <input
                                            name="productType"
                                            type="hidden"
                                            value=""
                                          />
                                        </div>
                                      </EmotionCssPropInternal>
                                    </SelectContainer>
                                  </Select>
                                </ForwardRef>
                              </div>
                            </MuiFormControlRoot>
                          </ForwardRef(FormControl)>
                        </SingleSelect>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={5}
                    md={8}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
                      ownerState={
                        Object {
                          "children": <SingleSelect
                            error={false}
                            id="masterProductName"
                            isDisabled={false}
                            items={Array []}
                            label="Master Product Name"
                            name="masterProductName"
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="Select Master Product Name"
                            required={true}
                            value={
                              Object {
                                "label": "",
                                "value": "",
                              }
                            }
                          />,
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": 5,
                          "md": 8,
                          "rowSpacing": 0,
                          "sm": 8,
                          "sx": Object {
                            "mx": 4,
                            "my": 1,
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 8,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "mx": 4,
                          "my": 1,
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
                      >
                        <SingleSelect
                          error={false}
                          id="masterProductName"
                          isDisabled={false}
                          items={Array []}
                          label="Master Product Name"
                          name="masterProductName"
                          onBlur={[Function]}
                          onChange={[Function]}
                          placeholder="Select Master Product Name"
                          required={true}
                          value={
                            Object {
                              "label": "",
                              "value": "",
                            }
                          }
                        >
                          <ForwardRef(FormControl)
                            className="select"
                          >
                            <MuiFormControlRoot
                              as="div"
                              className="MuiFormControl-root select"
                              ownerState={
                                Object {
                                  "children": Array [
                                    <ForwardRef(InputLabel)
                                      aria-labelledby="Master Product Name"
                                      aria-required={true}
                                      htmlFor="masterProductName-label"
                                      shrink={true}
                                      style={
                                        Object {
                                          "color": "var(--Darkgray)",
                                        }
                                      }
                                    >
                                      <b>
                                        MASTER PRODUCT NAME
                                        <span
                                          className="super"
                                        >
                                          * 
                                        </span>
                                      </b>
                                    </ForwardRef(InputLabel)>,
                                    <ForwardRef
                                      className="react-select-container"
                                      classNamePrefix="react-select"
                                      components={
                                        Object {
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "Option": [Function],
                                          "SingleValue": [Function],
                                        }
                                      }
                                      id="masterProductName"
                                      isDisabled={false}
                                      isSearchable={false}
                                      name="masterProductName"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      options={Array []}
                                      placeholder="Select Master Product Name"
                                      value={
                                        Object {
                                          "label": "",
                                          "value": "",
                                        }
                                      }
                                    />,
                                    undefined,
                                  ],
                                  "className": "select",
                                  "color": "primary",
                                  "component": "div",
                                  "disabled": false,
                                  "error": false,
                                  "fullWidth": false,
                                  "hiddenLabel": false,
                                  "margin": "none",
                                  "required": false,
                                  "size": "medium",
                                  "variant": "outlined",
                                }
                              }
                            >
                              <div
                                className="MuiFormControl-root select css-1nrlq1o-MuiFormControl-root"
                              >
                                <ForwardRef(InputLabel)
                                  aria-labelledby="Master Product Name"
                                  aria-required={true}
                                  htmlFor="masterProductName-label"
                                  shrink={true}
                                  style={
                                    Object {
                                      "color": "var(--Darkgray)",
                                    }
                                  }
                                >
                                  <MuiInputLabelRoot
                                    aria-labelledby="Master Product Name"
                                    aria-required={true}
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={true}
                                    htmlFor="masterProductName-label"
                                    ownerState={
                                      Object {
                                        "aria-labelledby": "Master Product Name",
                                        "aria-required": true,
                                        "children": <b>
                                          MASTER PRODUCT NAME
                                          <span
                                            className="super"
                                          >
                                            * 
                                          </span>
                                        </b>,
                                        "disableAnimation": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": false,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": false,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "htmlFor": "masterProductName-label",
                                        "required": false,
                                        "shrink": true,
                                        "size": "medium",
                                        "style": Object {
                                          "color": "var(--Darkgray)",
                                        },
                                        "variant": "outlined",
                                      }
                                    }
                                    style={
                                      Object {
                                        "color": "var(--Darkgray)",
                                      }
                                    }
                                  >
                                    <ForwardRef(FormLabel)
                                      aria-labelledby="Master Product Name"
                                      aria-required={true}
                                      className="css-1bzvmy4-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="masterProductName-label"
                                      style={
                                        Object {
                                          "color": "var(--Darkgray)",
                                        }
                                      }
                                    >
                                      <MuiFormLabelRoot
                                        aria-labelledby="Master Product Name"
                                        aria-required={true}
                                        as="label"
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1bzvmy4-MuiInputLabel-root"
                                        classes={
                                          Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="masterProductName-label"
                                        ownerState={
                                          Object {
                                            "aria-labelledby": "Master Product Name",
                                            "aria-required": true,
                                            "children": <b>
                                              MASTER PRODUCT NAME
                                              <span
                                                className="super"
                                              >
                                                * 
                                              </span>
                                            </b>,
                                            "className": "css-1bzvmy4-MuiInputLabel-root",
                                            "classes": Object {
                                              "asterisk": "",
                                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                            },
                                            "color": "primary",
                                            "component": "label",
                                            "data-shrink": true,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "htmlFor": "masterProductName-label",
                                            "required": false,
                                            "style": Object {
                                              "color": "var(--Darkgray)",
                                            },
                                          }
                                        }
                                        style={
                                          Object {
                                            "color": "var(--Darkgray)",
                                          }
                                        }
                                      >
                                        <label
                                          aria-labelledby="Master Product Name"
                                          aria-required={true}
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1kty9di-MuiFormLabel-root-MuiInputLabel-root"
                                          data-shrink={true}
                                          htmlFor="masterProductName-label"
                                          style={
                                            Object {
                                              "color": "var(--Darkgray)",
                                            }
                                          }
                                        >
                                          <b>
                                            MASTER PRODUCT NAME
                                            <span
                                              className="super"
                                            >
                                              * 
                                            </span>
                                          </b>
                                        </label>
                                      </MuiFormLabelRoot>
                                    </ForwardRef(FormLabel)>
                                  </MuiInputLabelRoot>
                                </ForwardRef(InputLabel)>
                                <ForwardRef
                                  className="react-select-container"
                                  classNamePrefix="react-select"
                                  components={
                                    Object {
                                      "DropdownIndicator": [Function],
                                      "IndicatorSeparator": [Function],
                                      "Option": [Function],
                                      "SingleValue": [Function],
                                    }
                                  }
                                  id="masterProductName"
                                  isDisabled={false}
                                  isSearchable={false}
                                  name="masterProductName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  options={Array []}
                                  placeholder="Select Master Product Name"
                                  value={
                                    Object {
                                      "label": "",
                                      "value": "",
                                    }
                                  }
                                >
                                  <Select
                                    aria-live="polite"
                                    backspaceRemovesValue={true}
                                    blurInputOnSelect={true}
                                    captureMenuScroll={false}
                                    className="react-select-container"
                                    classNamePrefix="react-select"
                                    closeMenuOnScroll={false}
                                    closeMenuOnSelect={true}
                                    components={
                                      Object {
                                        "DropdownIndicator": [Function],
                                        "IndicatorSeparator": [Function],
                                        "Option": [Function],
                                        "SingleValue": [Function],
                                      }
                                    }
                                    controlShouldRenderValue={true}
                                    escapeClearsValue={false}
                                    filterOption={[Function]}
                                    formatGroupLabel={[Function]}
                                    getOptionLabel={[Function]}
                                    getOptionValue={[Function]}
                                    id="masterProductName"
                                    inputValue=""
                                    isDisabled={false}
                                    isLoading={false}
                                    isMulti={false}
                                    isOptionDisabled={[Function]}
                                    isRtl={false}
                                    isSearchable={false}
                                    loadingMessage={[Function]}
                                    maxMenuHeight={300}
                                    menuIsOpen={false}
                                    menuPlacement="bottom"
                                    menuPosition="absolute"
                                    menuShouldBlockScroll={false}
                                    menuShouldScrollIntoView={true}
                                    minMenuHeight={140}
                                    name="masterProductName"
                                    noOptionsMessage={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onInputChange={[Function]}
                                    onKeyDown={[Function]}
                                    onMenuClose={[Function]}
                                    onMenuOpen={[Function]}
                                    openMenuOnClick={true}
                                    openMenuOnFocus={false}
                                    options={Array []}
                                    pageSize={5}
                                    placeholder="Select Master Product Name"
                                    screenReaderStatus={[Function]}
                                    styles={Object {}}
                                    tabIndex={0}
                                    tabSelectsValue={true}
                                    value={
                                      Object {
                                        "label": "",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <SelectContainer
                                      className="react-select-container"
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      innerProps={
                                        Object {
                                          "id": "masterProductName",
                                          "onKeyDown": [Function],
                                        }
                                      }
                                      isDisabled={false}
                                      isFocused={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={Array []}
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "aria-live": "polite",
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "react-select-container",
                                          "classNamePrefix": "react-select",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "Option": [Function],
                                            "SingleValue": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "id": "masterProductName",
                                          "inputValue": "",
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": false,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "name": "masterProductName",
                                          "noOptionsMessage": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onKeyDown": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [],
                                          "pageSize": 5,
                                          "placeholder": "Select Master Product Name",
                                          "screenReaderStatus": [Function],
                                          "styles": Object {},
                                          "tabIndex": 0,
                                          "tabSelectsValue": true,
                                          "value": Object {
                                            "label": "",
                                            "value": "",
                                          },
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#DE350B",
                                            "dangerLight": "#FFBDAD",
                                            "neutral0": "hsl(0, 0%, 100%)",
                                            "neutral10": "hsl(0, 0%, 90%)",
                                            "neutral20": "hsl(0, 0%, 80%)",
                                            "neutral30": "hsl(0, 0%, 70%)",
                                            "neutral40": "hsl(0, 0%, 60%)",
                                            "neutral5": "hsl(0, 0%, 95%)",
                                            "neutral50": "hsl(0, 0%, 50%)",
                                            "neutral60": "hsl(0, 0%, 40%)",
                                            "neutral70": "hsl(0, 0%, 30%)",
                                            "neutral80": "hsl(0, 0%, 20%)",
                                            "neutral90": "hsl(0, 0%, 10%)",
                                            "primary": "#2684FF",
                                            "primary25": "#DEEBFF",
                                            "primary50": "#B2D4FF",
                                            "primary75": "#4C9AFF",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <EmotionCssPropInternal
                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                        className="react-select-container"
                                        css={
                                          Object {
                                            "boxSizing": "border-box",
                                            "direction": undefined,
                                            "label": "container",
                                            "pointerEvents": undefined,
                                            "position": "relative",
                                          }
                                        }
                                        id="masterProductName"
                                        onKeyDown={[Function]}
                                      >
                                        <div
                                          className="react-select-container css-b62m3t-container"
                                          id="masterProductName"
                                          onKeyDown={[Function]}
                                        >
                                          <LiveRegion
                                            ariaSelection={null}
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            focusableOptions={Array []}
                                            focusedOption={null}
                                            focusedValue={null}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            id="react-select-3-live-region"
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "react-select-container",
                                                "classNamePrefix": "react-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "Option": [Function],
                                                  "SingleValue": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "id": "masterProductName",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "masterProductName",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onKeyDown": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select Master Product Name",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              }
                                            }
                                            selectValue={
                                              Array [
                                                Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              ]
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <A11yText
                                              id="react-select-3-live-region"
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                css={
                                                  Object {
                                                    "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                    "name": "1f43avz-a11yText-A11yText",
                                                    "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                    "toString": [Function],
                                                  }
                                                }
                                                id="react-select-3-live-region"
                                              >
                                                <span
                                                  className="css-1f43avz-a11yText-A11yText"
                                                  id="react-select-3-live-region"
                                                />
                                              </EmotionCssPropInternal>
                                            </A11yText>
                                            <A11yText
                                              aria-atomic="false"
                                              aria-live="polite"
                                              aria-relevant="additions text"
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                aria-atomic="false"
                                                aria-live="polite"
                                                aria-relevant="additions text"
                                                css={
                                                  Object {
                                                    "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                    "name": "1f43avz-a11yText-A11yText",
                                                    "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                    "toString": [Function],
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-atomic="false"
                                                  aria-live="polite"
                                                  aria-relevant="additions text"
                                                  className="css-1f43avz-a11yText-A11yText"
                                                />
                                              </EmotionCssPropInternal>
                                            </A11yText>
                                          </LiveRegion>
                                          <Control
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            innerProps={
                                              Object {
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            innerRef={[Function]}
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            menuIsOpen={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "react-select-container",
                                                "classNamePrefix": "react-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "Option": [Function],
                                                  "SingleValue": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "id": "masterProductName",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "masterProductName",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onKeyDown": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select Master Product Name",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              className="react-select__control"
                                              css={
                                                Object {
                                                  "&:hover": Object {
                                                    "borderColor": "hsl(0, 0%, 70%)",
                                                  },
                                                  "alignItems": "center",
                                                  "backgroundColor": "hsl(0, 0%, 100%)",
                                                  "borderColor": "hsl(0, 0%, 80%)",
                                                  "borderRadius": 4,
                                                  "borderStyle": "solid",
                                                  "borderWidth": 1,
                                                  "boxShadow": undefined,
                                                  "boxSizing": "border-box",
                                                  "cursor": "default",
                                                  "display": "flex",
                                                  "flexWrap": "wrap",
                                                  "justifyContent": "space-between",
                                                  "label": "control",
                                                  "minHeight": 38,
                                                  "outline": "0 !important",
                                                  "position": "relative",
                                                  "transition": "all 100ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                className="react-select__control css-1s2u09g-control"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <ValueContainer
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  isDisabled={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={Array []}
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "aria-live": "polite",
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "react-select-container",
                                                      "classNamePrefix": "react-select",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {
                                                        "DropdownIndicator": [Function],
                                                        "IndicatorSeparator": [Function],
                                                        "Option": [Function],
                                                        "SingleValue": [Function],
                                                      },
                                                      "controlShouldRenderValue": true,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "id": "masterProductName",
                                                      "inputValue": "",
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "bottom",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "masterProductName",
                                                      "noOptionsMessage": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onKeyDown": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [],
                                                      "pageSize": 5,
                                                      "placeholder": "Select Master Product Name",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {},
                                                      "tabIndex": 0,
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "label": "",
                                                        "value": "",
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                    className="react-select__value-container react-select__value-container--has-value"
                                                    css={
                                                      Object {
                                                        "WebkitOverflowScrolling": "touch",
                                                        "alignItems": "center",
                                                        "boxSizing": "border-box",
                                                        "display": "grid",
                                                        "flex": 1,
                                                        "flexWrap": "wrap",
                                                        "overflow": "hidden",
                                                        "padding": "2px 8px",
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="react-select__value-container react-select__value-container--has-value css-319lph-ValueContainer"
                                                    >
                                                      <SingleValueFrag
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        data={
                                                          Object {
                                                            "label": "",
                                                            "value": "",
                                                          }
                                                        }
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "masterProductName",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "masterProductName",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select Master Product Name",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <SingleValue
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          data={
                                                            Object {
                                                              "label": "",
                                                              "value": "",
                                                            }
                                                          }
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={Array []}
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "aria-live": "polite",
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "react-select-container",
                                                              "classNamePrefix": "react-select",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {
                                                                "DropdownIndicator": [Function],
                                                                "IndicatorSeparator": [Function],
                                                                "Option": [Function],
                                                                "SingleValue": [Function],
                                                              },
                                                              "controlShouldRenderValue": true,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "id": "masterProductName",
                                                              "inputValue": "",
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "bottom",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "masterProductName",
                                                              "noOptionsMessage": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onKeyDown": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [],
                                                              "pageSize": 5,
                                                              "placeholder": "Select Master Product Name",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {},
                                                              "tabIndex": 0,
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "label": "",
                                                                "value": "",
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <EmotionCssPropInternal
                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                            className="react-select__single-value"
                                                            css={
                                                              Object {
                                                                "boxSizing": "border-box",
                                                                "color": "hsl(0, 0%, 20%)",
                                                                "gridArea": "1 / 1 / 2 / 3",
                                                                "label": "singleValue",
                                                                "marginLeft": 2,
                                                                "marginRight": 2,
                                                                "maxWidth": "100%",
                                                                "overflow": "hidden",
                                                                "textOverflow": "ellipsis",
                                                                "whiteSpace": "nowrap",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="react-select__single-value css-qc6sy-singleValue"
                                                            >
                                                              <span
                                                                className="value-box"
                                                              >
                                                                 
                                                                <span
                                                                  className="label-text"
                                                                />
                                                              </span>
                                                            </div>
                                                          </EmotionCssPropInternal>
                                                        </SingleValue>
                                                      </SingleValueFrag>
                                                      <DummyInput
                                                        aria-autocomplete="list"
                                                        aria-controls="react-select-3-listbox"
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-owns="react-select-3-listbox"
                                                        aria-readonly={true}
                                                        disabled={false}
                                                        id="react-select-3-input"
                                                        innerRef={[Function]}
                                                        inputMode="none"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        role="combobox"
                                                        tabIndex={0}
                                                        value=""
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DummyInput"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="input"
                                                          aria-autocomplete="list"
                                                          aria-controls="react-select-3-listbox"
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-owns="react-select-3-listbox"
                                                          aria-readonly={true}
                                                          css={
                                                            Object {
                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNNIiwiZmlsZSI6IkR1bW15SW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIHJlZj17aW5uZXJSZWZ9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */",
                                                              "name": "mohuvp-dummyInput-DummyInput",
                                                              "next": undefined,
                                                              "styles": "label:dummyInput;background:0;border:0;caret-color:transparent;font-size:inherit;grid-area:1 / 1 / 2 / 3;outline:0;padding:0;width:1px;color:transparent;left:-100px;opacity:0;position:relative;transform:scale(.01);;label:DummyInput;",
                                                              "toString": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          id="react-select-3-input"
                                                          inputMode="none"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          role="combobox"
                                                          tabIndex={0}
                                                          value=""
                                                        >
                                                          <input
                                                            aria-autocomplete="list"
                                                            aria-controls="react-select-3-listbox"
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-owns="react-select-3-listbox"
                                                            aria-readonly={true}
                                                            className="css-mohuvp-dummyInput-DummyInput"
                                                            disabled={false}
                                                            id="react-select-3-input"
                                                            inputMode="none"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            tabIndex={0}
                                                            value=""
                                                          />
                                                        </EmotionCssPropInternal>
                                                      </DummyInput>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </ValueContainer>
                                                <IndicatorsContainer
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  isDisabled={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={Array []}
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "aria-live": "polite",
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "react-select-container",
                                                      "classNamePrefix": "react-select",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {
                                                        "DropdownIndicator": [Function],
                                                        "IndicatorSeparator": [Function],
                                                        "Option": [Function],
                                                        "SingleValue": [Function],
                                                      },
                                                      "controlShouldRenderValue": true,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "id": "masterProductName",
                                                      "inputValue": "",
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "bottom",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "masterProductName",
                                                      "noOptionsMessage": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onKeyDown": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [],
                                                      "pageSize": 5,
                                                      "placeholder": "Select Master Product Name",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {},
                                                      "tabIndex": 0,
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "label": "",
                                                        "value": "",
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                    className="react-select__indicators"
                                                    css={
                                                      Object {
                                                        "alignItems": "center",
                                                        "alignSelf": "stretch",
                                                        "boxSizing": "border-box",
                                                        "display": "flex",
                                                        "flexShrink": 0,
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="react-select__indicators css-1hb7zxy-IndicatorsContainer"
                                                    >
                                                      <IndicatorSeparator
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        isDisabled={false}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "masterProductName",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "masterProductName",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select Master Product Name",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      />
                                                      <DropdownIndicator
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        innerProps={
                                                          Object {
                                                            "aria-hidden": "true",
                                                            "onMouseDown": [Function],
                                                            "onTouchEnd": [Function],
                                                          }
                                                        }
                                                        isDisabled={false}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "masterProductName",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "masterProductName",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select Master Product Name",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <DropdownIndicator
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          innerProps={
                                                            Object {
                                                              "aria-hidden": "true",
                                                              "onMouseDown": [Function],
                                                              "onTouchEnd": [Function],
                                                            }
                                                          }
                                                          isDisabled={false}
                                                          isFocused={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={Array []}
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "aria-live": "polite",
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "react-select-container",
                                                              "classNamePrefix": "react-select",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {
                                                                "DropdownIndicator": [Function],
                                                                "IndicatorSeparator": [Function],
                                                                "Option": [Function],
                                                                "SingleValue": [Function],
                                                              },
                                                              "controlShouldRenderValue": true,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "id": "masterProductName",
                                                              "inputValue": "",
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "bottom",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "masterProductName",
                                                              "noOptionsMessage": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onKeyDown": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [],
                                                              "pageSize": 5,
                                                              "placeholder": "Select Master Product Name",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {},
                                                              "tabIndex": 0,
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "label": "",
                                                                "value": "",
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <EmotionCssPropInternal
                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                            aria-hidden="true"
                                                            className="react-select__indicator react-select__dropdown-indicator"
                                                            css={
                                                              Object {
                                                                ":hover": Object {
                                                                  "color": "hsl(0, 0%, 60%)",
                                                                },
                                                                "boxSizing": "border-box",
                                                                "color": "hsl(0, 0%, 80%)",
                                                                "display": "flex",
                                                                "label": "indicatorContainer",
                                                                "padding": 8,
                                                                "transition": "color 150ms",
                                                              }
                                                            }
                                                            onMouseDown={[Function]}
                                                            onTouchEnd={[Function]}
                                                          >
                                                            <div
                                                              aria-hidden="true"
                                                              className="react-select__indicator react-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                              onMouseDown={[Function]}
                                                              onTouchEnd={[Function]}
                                                            >
                                                              <ArrowDown>
                                                                <svg
                                                                  height="1em"
                                                                  viewBox="0 0 20 20"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="m1.742 5 8.628 7.844 7.821-7.812 1.413 1.418-9.17 9.159L.396 6.48Z"
                                                                    fill="var(--Gray)"
                                                                  />
                                                                  <path
                                                                    d="M0 0h20v20H0z"
                                                                    fill="none"
                                                                  />
                                                                </svg>
                                                              </ArrowDown>
                                                            </div>
                                                          </EmotionCssPropInternal>
                                                        </DropdownIndicator>
                                                      </DropdownIndicator>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </IndicatorsContainer>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </Control>
                                          <input
                                            name="masterProductName"
                                            type="hidden"
                                            value=""
                                          />
                                        </div>
                                      </EmotionCssPropInternal>
                                    </SelectContainer>
                                  </Select>
                                </ForwardRef>
                              </div>
                            </MuiFormControlRoot>
                          </ForwardRef(FormControl)>
                        </SingleSelect>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={5}
                    md={8}
                    mx={4}
                    my={1}
                    sm={8}
                    xs={8}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5"
                      ownerState={
                        Object {
                          "children": <SingleSelect
                            error={false}
                            id="pricingModel"
                            isDisabled={false}
                            items={Array []}
                            label="Pricing Model"
                            name="pricingModel"
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="Select one"
                            required={true}
                            value={
                              Object {
                                "label": "",
                                "value": "",
                              }
                            }
                          />,
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": 5,
                          "md": 8,
                          "rowSpacing": 0,
                          "sm": 8,
                          "sx": Object {
                            "mx": 4,
                            "my": 1,
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 8,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "mx": 4,
                          "my": 1,
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 MuiGrid-grid-sm-8 MuiGrid-grid-md-8 MuiGrid-grid-lg-5 css-16sj7k7-MuiGrid-root"
                      >
                        <SingleSelect
                          error={false}
                          id="pricingModel"
                          isDisabled={false}
                          items={Array []}
                          label="Pricing Model"
                          name="pricingModel"
                          onBlur={[Function]}
                          onChange={[Function]}
                          placeholder="Select one"
                          required={true}
                          value={
                            Object {
                              "label": "",
                              "value": "",
                            }
                          }
                        >
                          <ForwardRef(FormControl)
                            className="select"
                          >
                            <MuiFormControlRoot
                              as="div"
                              className="MuiFormControl-root select"
                              ownerState={
                                Object {
                                  "children": Array [
                                    <ForwardRef(InputLabel)
                                      aria-labelledby="Pricing Model"
                                      aria-required={true}
                                      htmlFor="pricingModel-label"
                                      shrink={true}
                                      style={
                                        Object {
                                          "color": "var(--Darkgray)",
                                        }
                                      }
                                    >
                                      <b>
                                        PRICING MODEL
                                        <span
                                          className="super"
                                        >
                                          * 
                                        </span>
                                      </b>
                                    </ForwardRef(InputLabel)>,
                                    <ForwardRef
                                      className="react-select-container"
                                      classNamePrefix="react-select"
                                      components={
                                        Object {
                                          "DropdownIndicator": [Function],
                                          "IndicatorSeparator": [Function],
                                          "Option": [Function],
                                          "SingleValue": [Function],
                                        }
                                      }
                                      id="pricingModel"
                                      isDisabled={false}
                                      isSearchable={false}
                                      name="pricingModel"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      options={Array []}
                                      placeholder="Select one"
                                      value={
                                        Object {
                                          "label": "",
                                          "value": "",
                                        }
                                      }
                                    />,
                                    undefined,
                                  ],
                                  "className": "select",
                                  "color": "primary",
                                  "component": "div",
                                  "disabled": false,
                                  "error": false,
                                  "fullWidth": false,
                                  "hiddenLabel": false,
                                  "margin": "none",
                                  "required": false,
                                  "size": "medium",
                                  "variant": "outlined",
                                }
                              }
                            >
                              <div
                                className="MuiFormControl-root select css-1nrlq1o-MuiFormControl-root"
                              >
                                <ForwardRef(InputLabel)
                                  aria-labelledby="Pricing Model"
                                  aria-required={true}
                                  htmlFor="pricingModel-label"
                                  shrink={true}
                                  style={
                                    Object {
                                      "color": "var(--Darkgray)",
                                    }
                                  }
                                >
                                  <MuiInputLabelRoot
                                    aria-labelledby="Pricing Model"
                                    aria-required={true}
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                      }
                                    }
                                    data-shrink={true}
                                    htmlFor="pricingModel-label"
                                    ownerState={
                                      Object {
                                        "aria-labelledby": "Pricing Model",
                                        "aria-required": true,
                                        "children": <b>
                                          PRICING MODEL
                                          <span
                                            className="super"
                                          >
                                            * 
                                          </span>
                                        </b>,
                                        "disableAnimation": false,
                                        "formControl": Object {
                                          "adornedStart": false,
                                          "color": "primary",
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "fullWidth": false,
                                          "hiddenLabel": false,
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "registerEffect": [Function],
                                          "required": false,
                                          "setAdornedStart": [Function],
                                          "size": "medium",
                                          "variant": "outlined",
                                        },
                                        "htmlFor": "pricingModel-label",
                                        "required": false,
                                        "shrink": true,
                                        "size": "medium",
                                        "style": Object {
                                          "color": "var(--Darkgray)",
                                        },
                                        "variant": "outlined",
                                      }
                                    }
                                    style={
                                      Object {
                                        "color": "var(--Darkgray)",
                                      }
                                    }
                                  >
                                    <ForwardRef(FormLabel)
                                      aria-labelledby="Pricing Model"
                                      aria-required={true}
                                      className="css-1bzvmy4-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="pricingModel-label"
                                      style={
                                        Object {
                                          "color": "var(--Darkgray)",
                                        }
                                      }
                                    >
                                      <MuiFormLabelRoot
                                        aria-labelledby="Pricing Model"
                                        aria-required={true}
                                        as="label"
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1bzvmy4-MuiInputLabel-root"
                                        classes={
                                          Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="pricingModel-label"
                                        ownerState={
                                          Object {
                                            "aria-labelledby": "Pricing Model",
                                            "aria-required": true,
                                            "children": <b>
                                              PRICING MODEL
                                              <span
                                                className="super"
                                              >
                                                * 
                                              </span>
                                            </b>,
                                            "className": "css-1bzvmy4-MuiInputLabel-root",
                                            "classes": Object {
                                              "asterisk": "",
                                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined",
                                            },
                                            "color": "primary",
                                            "component": "label",
                                            "data-shrink": true,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "htmlFor": "pricingModel-label",
                                            "required": false,
                                            "style": Object {
                                              "color": "var(--Darkgray)",
                                            },
                                          }
                                        }
                                        style={
                                          Object {
                                            "color": "var(--Darkgray)",
                                          }
                                        }
                                      >
                                        <label
                                          aria-labelledby="Pricing Model"
                                          aria-required={true}
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1kty9di-MuiFormLabel-root-MuiInputLabel-root"
                                          data-shrink={true}
                                          htmlFor="pricingModel-label"
                                          style={
                                            Object {
                                              "color": "var(--Darkgray)",
                                            }
                                          }
                                        >
                                          <b>
                                            PRICING MODEL
                                            <span
                                              className="super"
                                            >
                                              * 
                                            </span>
                                          </b>
                                        </label>
                                      </MuiFormLabelRoot>
                                    </ForwardRef(FormLabel)>
                                  </MuiInputLabelRoot>
                                </ForwardRef(InputLabel)>
                                <ForwardRef
                                  className="react-select-container"
                                  classNamePrefix="react-select"
                                  components={
                                    Object {
                                      "DropdownIndicator": [Function],
                                      "IndicatorSeparator": [Function],
                                      "Option": [Function],
                                      "SingleValue": [Function],
                                    }
                                  }
                                  id="pricingModel"
                                  isDisabled={false}
                                  isSearchable={false}
                                  name="pricingModel"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  options={Array []}
                                  placeholder="Select one"
                                  value={
                                    Object {
                                      "label": "",
                                      "value": "",
                                    }
                                  }
                                >
                                  <Select
                                    aria-live="polite"
                                    backspaceRemovesValue={true}
                                    blurInputOnSelect={true}
                                    captureMenuScroll={false}
                                    className="react-select-container"
                                    classNamePrefix="react-select"
                                    closeMenuOnScroll={false}
                                    closeMenuOnSelect={true}
                                    components={
                                      Object {
                                        "DropdownIndicator": [Function],
                                        "IndicatorSeparator": [Function],
                                        "Option": [Function],
                                        "SingleValue": [Function],
                                      }
                                    }
                                    controlShouldRenderValue={true}
                                    escapeClearsValue={false}
                                    filterOption={[Function]}
                                    formatGroupLabel={[Function]}
                                    getOptionLabel={[Function]}
                                    getOptionValue={[Function]}
                                    id="pricingModel"
                                    inputValue=""
                                    isDisabled={false}
                                    isLoading={false}
                                    isMulti={false}
                                    isOptionDisabled={[Function]}
                                    isRtl={false}
                                    isSearchable={false}
                                    loadingMessage={[Function]}
                                    maxMenuHeight={300}
                                    menuIsOpen={false}
                                    menuPlacement="bottom"
                                    menuPosition="absolute"
                                    menuShouldBlockScroll={false}
                                    menuShouldScrollIntoView={true}
                                    minMenuHeight={140}
                                    name="pricingModel"
                                    noOptionsMessage={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onInputChange={[Function]}
                                    onKeyDown={[Function]}
                                    onMenuClose={[Function]}
                                    onMenuOpen={[Function]}
                                    openMenuOnClick={true}
                                    openMenuOnFocus={false}
                                    options={Array []}
                                    pageSize={5}
                                    placeholder="Select one"
                                    screenReaderStatus={[Function]}
                                    styles={Object {}}
                                    tabIndex={0}
                                    tabSelectsValue={true}
                                    value={
                                      Object {
                                        "label": "",
                                        "value": "",
                                      }
                                    }
                                  >
                                    <SelectContainer
                                      className="react-select-container"
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      innerProps={
                                        Object {
                                          "id": "pricingModel",
                                          "onKeyDown": [Function],
                                        }
                                      }
                                      isDisabled={false}
                                      isFocused={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={Array []}
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "aria-live": "polite",
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "react-select-container",
                                          "classNamePrefix": "react-select",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "Option": [Function],
                                            "SingleValue": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "id": "pricingModel",
                                          "inputValue": "",
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": false,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "name": "pricingModel",
                                          "noOptionsMessage": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onKeyDown": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [],
                                          "pageSize": 5,
                                          "placeholder": "Select one",
                                          "screenReaderStatus": [Function],
                                          "styles": Object {},
                                          "tabIndex": 0,
                                          "tabSelectsValue": true,
                                          "value": Object {
                                            "label": "",
                                            "value": "",
                                          },
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#DE350B",
                                            "dangerLight": "#FFBDAD",
                                            "neutral0": "hsl(0, 0%, 100%)",
                                            "neutral10": "hsl(0, 0%, 90%)",
                                            "neutral20": "hsl(0, 0%, 80%)",
                                            "neutral30": "hsl(0, 0%, 70%)",
                                            "neutral40": "hsl(0, 0%, 60%)",
                                            "neutral5": "hsl(0, 0%, 95%)",
                                            "neutral50": "hsl(0, 0%, 50%)",
                                            "neutral60": "hsl(0, 0%, 40%)",
                                            "neutral70": "hsl(0, 0%, 30%)",
                                            "neutral80": "hsl(0, 0%, 20%)",
                                            "neutral90": "hsl(0, 0%, 10%)",
                                            "primary": "#2684FF",
                                            "primary25": "#DEEBFF",
                                            "primary50": "#B2D4FF",
                                            "primary75": "#4C9AFF",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <EmotionCssPropInternal
                                        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                        className="react-select-container"
                                        css={
                                          Object {
                                            "boxSizing": "border-box",
                                            "direction": undefined,
                                            "label": "container",
                                            "pointerEvents": undefined,
                                            "position": "relative",
                                          }
                                        }
                                        id="pricingModel"
                                        onKeyDown={[Function]}
                                      >
                                        <div
                                          className="react-select-container css-b62m3t-container"
                                          id="pricingModel"
                                          onKeyDown={[Function]}
                                        >
                                          <LiveRegion
                                            ariaSelection={null}
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            focusableOptions={Array []}
                                            focusedOption={null}
                                            focusedValue={null}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            id="react-select-4-live-region"
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "react-select-container",
                                                "classNamePrefix": "react-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "Option": [Function],
                                                  "SingleValue": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "id": "pricingModel",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "pricingModel",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onKeyDown": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select one",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              }
                                            }
                                            selectValue={
                                              Array [
                                                Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              ]
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <A11yText
                                              id="react-select-4-live-region"
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                css={
                                                  Object {
                                                    "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                    "name": "1f43avz-a11yText-A11yText",
                                                    "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                    "toString": [Function],
                                                  }
                                                }
                                                id="react-select-4-live-region"
                                              >
                                                <span
                                                  className="css-1f43avz-a11yText-A11yText"
                                                  id="react-select-4-live-region"
                                                />
                                              </EmotionCssPropInternal>
                                            </A11yText>
                                            <A11yText
                                              aria-atomic="false"
                                              aria-live="polite"
                                              aria-relevant="additions text"
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                aria-atomic="false"
                                                aria-live="polite"
                                                aria-relevant="additions text"
                                                css={
                                                  Object {
                                                    "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                    "name": "1f43avz-a11yText-A11yText",
                                                    "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                    "toString": [Function],
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-atomic="false"
                                                  aria-live="polite"
                                                  aria-relevant="additions text"
                                                  className="css-1f43avz-a11yText-A11yText"
                                                />
                                              </EmotionCssPropInternal>
                                            </A11yText>
                                          </LiveRegion>
                                          <Control
                                            clearValue={[Function]}
                                            cx={[Function]}
                                            getStyles={[Function]}
                                            getValue={[Function]}
                                            hasValue={true}
                                            innerProps={
                                              Object {
                                                "onMouseDown": [Function],
                                                "onTouchEnd": [Function],
                                              }
                                            }
                                            innerRef={[Function]}
                                            isDisabled={false}
                                            isFocused={false}
                                            isMulti={false}
                                            isRtl={false}
                                            menuIsOpen={false}
                                            options={Array []}
                                            selectOption={[Function]}
                                            selectProps={
                                              Object {
                                                "aria-live": "polite",
                                                "backspaceRemovesValue": true,
                                                "blurInputOnSelect": true,
                                                "captureMenuScroll": false,
                                                "className": "react-select-container",
                                                "classNamePrefix": "react-select",
                                                "closeMenuOnScroll": false,
                                                "closeMenuOnSelect": true,
                                                "components": Object {
                                                  "DropdownIndicator": [Function],
                                                  "IndicatorSeparator": [Function],
                                                  "Option": [Function],
                                                  "SingleValue": [Function],
                                                },
                                                "controlShouldRenderValue": true,
                                                "escapeClearsValue": false,
                                                "filterOption": [Function],
                                                "formatGroupLabel": [Function],
                                                "getOptionLabel": [Function],
                                                "getOptionValue": [Function],
                                                "id": "pricingModel",
                                                "inputValue": "",
                                                "isDisabled": false,
                                                "isLoading": false,
                                                "isMulti": false,
                                                "isOptionDisabled": [Function],
                                                "isRtl": false,
                                                "isSearchable": false,
                                                "loadingMessage": [Function],
                                                "maxMenuHeight": 300,
                                                "menuIsOpen": false,
                                                "menuPlacement": "bottom",
                                                "menuPosition": "absolute",
                                                "menuShouldBlockScroll": false,
                                                "menuShouldScrollIntoView": true,
                                                "minMenuHeight": 140,
                                                "name": "pricingModel",
                                                "noOptionsMessage": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onInputChange": [Function],
                                                "onKeyDown": [Function],
                                                "onMenuClose": [Function],
                                                "onMenuOpen": [Function],
                                                "openMenuOnClick": true,
                                                "openMenuOnFocus": false,
                                                "options": Array [],
                                                "pageSize": 5,
                                                "placeholder": "Select one",
                                                "screenReaderStatus": [Function],
                                                "styles": Object {},
                                                "tabIndex": 0,
                                                "tabSelectsValue": true,
                                                "value": Object {
                                                  "label": "",
                                                  "value": "",
                                                },
                                              }
                                            }
                                            setValue={[Function]}
                                            theme={
                                              Object {
                                                "borderRadius": 4,
                                                "colors": Object {
                                                  "danger": "#DE350B",
                                                  "dangerLight": "#FFBDAD",
                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                  "primary": "#2684FF",
                                                  "primary25": "#DEEBFF",
                                                  "primary50": "#B2D4FF",
                                                  "primary75": "#4C9AFF",
                                                },
                                                "spacing": Object {
                                                  "baseUnit": 4,
                                                  "controlHeight": 38,
                                                  "menuGutter": 8,
                                                },
                                              }
                                            }
                                          >
                                            <EmotionCssPropInternal
                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                              className="react-select__control"
                                              css={
                                                Object {
                                                  "&:hover": Object {
                                                    "borderColor": "hsl(0, 0%, 70%)",
                                                  },
                                                  "alignItems": "center",
                                                  "backgroundColor": "hsl(0, 0%, 100%)",
                                                  "borderColor": "hsl(0, 0%, 80%)",
                                                  "borderRadius": 4,
                                                  "borderStyle": "solid",
                                                  "borderWidth": 1,
                                                  "boxShadow": undefined,
                                                  "boxSizing": "border-box",
                                                  "cursor": "default",
                                                  "display": "flex",
                                                  "flexWrap": "wrap",
                                                  "justifyContent": "space-between",
                                                  "label": "control",
                                                  "minHeight": 38,
                                                  "outline": "0 !important",
                                                  "position": "relative",
                                                  "transition": "all 100ms",
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <div
                                                className="react-select__control css-1s2u09g-control"
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                              >
                                                <ValueContainer
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  isDisabled={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={Array []}
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "aria-live": "polite",
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "react-select-container",
                                                      "classNamePrefix": "react-select",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {
                                                        "DropdownIndicator": [Function],
                                                        "IndicatorSeparator": [Function],
                                                        "Option": [Function],
                                                        "SingleValue": [Function],
                                                      },
                                                      "controlShouldRenderValue": true,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "id": "pricingModel",
                                                      "inputValue": "",
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "bottom",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "pricingModel",
                                                      "noOptionsMessage": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onKeyDown": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [],
                                                      "pageSize": 5,
                                                      "placeholder": "Select one",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {},
                                                      "tabIndex": 0,
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "label": "",
                                                        "value": "",
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                    className="react-select__value-container react-select__value-container--has-value"
                                                    css={
                                                      Object {
                                                        "WebkitOverflowScrolling": "touch",
                                                        "alignItems": "center",
                                                        "boxSizing": "border-box",
                                                        "display": "grid",
                                                        "flex": 1,
                                                        "flexWrap": "wrap",
                                                        "overflow": "hidden",
                                                        "padding": "2px 8px",
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="react-select__value-container react-select__value-container--has-value css-319lph-ValueContainer"
                                                    >
                                                      <SingleValueFrag
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        data={
                                                          Object {
                                                            "label": "",
                                                            "value": "",
                                                          }
                                                        }
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        isDisabled={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "pricingModel",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "pricingModel",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select one",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <SingleValue
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          data={
                                                            Object {
                                                              "label": "",
                                                              "value": "",
                                                            }
                                                          }
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={Array []}
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "aria-live": "polite",
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "react-select-container",
                                                              "classNamePrefix": "react-select",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {
                                                                "DropdownIndicator": [Function],
                                                                "IndicatorSeparator": [Function],
                                                                "Option": [Function],
                                                                "SingleValue": [Function],
                                                              },
                                                              "controlShouldRenderValue": true,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "id": "pricingModel",
                                                              "inputValue": "",
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "bottom",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "pricingModel",
                                                              "noOptionsMessage": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onKeyDown": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [],
                                                              "pageSize": 5,
                                                              "placeholder": "Select one",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {},
                                                              "tabIndex": 0,
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "label": "",
                                                                "value": "",
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <EmotionCssPropInternal
                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                            className="react-select__single-value"
                                                            css={
                                                              Object {
                                                                "boxSizing": "border-box",
                                                                "color": "hsl(0, 0%, 20%)",
                                                                "gridArea": "1 / 1 / 2 / 3",
                                                                "label": "singleValue",
                                                                "marginLeft": 2,
                                                                "marginRight": 2,
                                                                "maxWidth": "100%",
                                                                "overflow": "hidden",
                                                                "textOverflow": "ellipsis",
                                                                "whiteSpace": "nowrap",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="react-select__single-value css-qc6sy-singleValue"
                                                            >
                                                              <span
                                                                className="value-box"
                                                              >
                                                                 
                                                                <span
                                                                  className="label-text"
                                                                />
                                                              </span>
                                                            </div>
                                                          </EmotionCssPropInternal>
                                                        </SingleValue>
                                                      </SingleValueFrag>
                                                      <DummyInput
                                                        aria-autocomplete="list"
                                                        aria-controls="react-select-4-listbox"
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        aria-owns="react-select-4-listbox"
                                                        aria-readonly={true}
                                                        disabled={false}
                                                        id="react-select-4-input"
                                                        innerRef={[Function]}
                                                        inputMode="none"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        role="combobox"
                                                        tabIndex={0}
                                                        value=""
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DummyInput"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="input"
                                                          aria-autocomplete="list"
                                                          aria-controls="react-select-4-listbox"
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          aria-owns="react-select-4-listbox"
                                                          aria-readonly={true}
                                                          css={
                                                            Object {
                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNNIiwiZmlsZSI6IkR1bW15SW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIHJlZj17aW5uZXJSZWZ9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */",
                                                              "name": "mohuvp-dummyInput-DummyInput",
                                                              "next": undefined,
                                                              "styles": "label:dummyInput;background:0;border:0;caret-color:transparent;font-size:inherit;grid-area:1 / 1 / 2 / 3;outline:0;padding:0;width:1px;color:transparent;left:-100px;opacity:0;position:relative;transform:scale(.01);;label:DummyInput;",
                                                              "toString": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          id="react-select-4-input"
                                                          inputMode="none"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          role="combobox"
                                                          tabIndex={0}
                                                          value=""
                                                        >
                                                          <input
                                                            aria-autocomplete="list"
                                                            aria-controls="react-select-4-listbox"
                                                            aria-expanded={false}
                                                            aria-haspopup={true}
                                                            aria-owns="react-select-4-listbox"
                                                            aria-readonly={true}
                                                            className="css-mohuvp-dummyInput-DummyInput"
                                                            disabled={false}
                                                            id="react-select-4-input"
                                                            inputMode="none"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            role="combobox"
                                                            tabIndex={0}
                                                            value=""
                                                          />
                                                        </EmotionCssPropInternal>
                                                      </DummyInput>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </ValueContainer>
                                                <IndicatorsContainer
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  isDisabled={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={Array []}
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "aria-live": "polite",
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "react-select-container",
                                                      "classNamePrefix": "react-select",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {
                                                        "DropdownIndicator": [Function],
                                                        "IndicatorSeparator": [Function],
                                                        "Option": [Function],
                                                        "SingleValue": [Function],
                                                      },
                                                      "controlShouldRenderValue": true,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "id": "pricingModel",
                                                      "inputValue": "",
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "bottom",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "pricingModel",
                                                      "noOptionsMessage": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onKeyDown": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [],
                                                      "pageSize": 5,
                                                      "placeholder": "Select one",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {},
                                                      "tabIndex": 0,
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "label": "",
                                                        "value": "",
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                    className="react-select__indicators"
                                                    css={
                                                      Object {
                                                        "alignItems": "center",
                                                        "alignSelf": "stretch",
                                                        "boxSizing": "border-box",
                                                        "display": "flex",
                                                        "flexShrink": 0,
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="react-select__indicators css-1hb7zxy-IndicatorsContainer"
                                                    >
                                                      <IndicatorSeparator
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        isDisabled={false}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "pricingModel",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "pricingModel",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select one",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      />
                                                      <DropdownIndicator
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={true}
                                                        innerProps={
                                                          Object {
                                                            "aria-hidden": "true",
                                                            "onMouseDown": [Function],
                                                            "onTouchEnd": [Function],
                                                          }
                                                        }
                                                        isDisabled={false}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": true,
                                                            "captureMenuScroll": false,
                                                            "className": "react-select-container",
                                                            "classNamePrefix": "react-select",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "DropdownIndicator": [Function],
                                                              "IndicatorSeparator": [Function],
                                                              "Option": [Function],
                                                              "SingleValue": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "pricingModel",
                                                            "inputValue": "",
                                                            "isDisabled": false,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": false,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "pricingModel",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onInputChange": [Function],
                                                            "onKeyDown": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Select one",
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {},
                                                            "tabIndex": 0,
                                                            "tabSelectsValue": true,
                                                            "value": Object {
                                                              "label": "",
                                                              "value": "",
                                                            },
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#DE350B",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2684FF",
                                                              "primary25": "#DEEBFF",
                                                              "primary50": "#B2D4FF",
                                                              "primary75": "#4C9AFF",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <DropdownIndicator
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          innerProps={
                                                            Object {
                                                              "aria-hidden": "true",
                                                              "onMouseDown": [Function],
                                                              "onTouchEnd": [Function],
                                                            }
                                                          }
                                                          isDisabled={false}
                                                          isFocused={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={Array []}
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "aria-live": "polite",
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "react-select-container",
                                                              "classNamePrefix": "react-select",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {
                                                                "DropdownIndicator": [Function],
                                                                "IndicatorSeparator": [Function],
                                                                "Option": [Function],
                                                                "SingleValue": [Function],
                                                              },
                                                              "controlShouldRenderValue": true,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "id": "pricingModel",
                                                              "inputValue": "",
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "bottom",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "pricingModel",
                                                              "noOptionsMessage": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onKeyDown": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [],
                                                              "pageSize": 5,
                                                              "placeholder": "Select one",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {},
                                                              "tabIndex": 0,
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "label": "",
                                                                "value": "",
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <EmotionCssPropInternal
                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                            aria-hidden="true"
                                                            className="react-select__indicator react-select__dropdown-indicator"
                                                            css={
                                                              Object {
                                                                ":hover": Object {
                                                                  "color": "hsl(0, 0%, 60%)",
                                                                },
                                                                "boxSizing": "border-box",
                                                                "color": "hsl(0, 0%, 80%)",
                                                                "display": "flex",
                                                                "label": "indicatorContainer",
                                                                "padding": 8,
                                                                "transition": "color 150ms",
                                                              }
                                                            }
                                                            onMouseDown={[Function]}
                                                            onTouchEnd={[Function]}
                                                          >
                                                            <div
                                                              aria-hidden="true"
                                                              className="react-select__indicator react-select__dropdown-indicator css-tlfecz-indicatorContainer"
                                                              onMouseDown={[Function]}
                                                              onTouchEnd={[Function]}
                                                            >
                                                              <ArrowDown>
                                                                <svg
                                                                  height="1em"
                                                                  viewBox="0 0 20 20"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="m1.742 5 8.628 7.844 7.821-7.812 1.413 1.418-9.17 9.159L.396 6.48Z"
                                                                    fill="var(--Gray)"
                                                                  />
                                                                  <path
                                                                    d="M0 0h20v20H0z"
                                                                    fill="none"
                                                                  />
                                                                </svg>
                                                              </ArrowDown>
                                                            </div>
                                                          </EmotionCssPropInternal>
                                                        </DropdownIndicator>
                                                      </DropdownIndicator>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </IndicatorsContainer>
                                              </div>
                                            </EmotionCssPropInternal>
                                          </Control>
                                          <input
                                            name="pricingModel"
                                            type="hidden"
                                            value=""
                                          />
                                        </div>
                                      </EmotionCssPropInternal>
                                    </SelectContainer>
                                  </Select>
                                </ForwardRef>
                              </div>
                            </MuiFormControlRoot>
                          </ForwardRef(FormControl)>
                        </SingleSelect>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    lg={12}
                    md={12}
                    mx={4}
                    sm={12}
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12"
                      ownerState={
                        Object {
                          "children": <hr />,
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": 12,
                          "md": 12,
                          "rowSpacing": 0,
                          "sm": 12,
                          "sx": Object {
                            "mx": 4,
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "mx": 4,
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12 css-1ylecwu-MuiGrid-root"
                      >
                        <hr />
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </MuiGridRoot>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              className="lastItem"
              container={true}
              item={true}
              lg={12}
              md={12}
              px={4}
              py={4}
              sm={12}
              xs={12}
            >
              <MuiGridRoot
                as="div"
                className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-spacing-xs-undefined MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12 lastItem"
                ownerState={
                  Object {
                    "children": <ForwardRef(Grid)
                      item={true}
                      lg={12}
                      md={12}
                      px={4}
                      py={4}
                      sm={12}
                      textAlign="right"
                      xs={12}
                    >
                      <Button
                        aria-label="cancel"
                        className="mr-4"
                        onClick={[Function]}
                        types="cancel"
                      >
                        buttons.cancel
                      </Button>
                      <Button
                        aria-label="save"
                        className="mr-4 ml-4 saveProduct"
                        disabled={true}
                        type="submit"
                        types="save"
                      >
                        buttons.save
                      </Button>
                      <ToastMessage
                        isOpen={false}
                        message=""
                        messageType=""
                        onClose={[Function]}
                      />
                    </ForwardRef(Grid)>,
                    "className": "lastItem",
                    "columnSpacing": 0,
                    "columns": 12,
                    "container": true,
                    "direction": "row",
                    "item": true,
                    "lg": 12,
                    "md": 12,
                    "rowSpacing": 0,
                    "sm": 12,
                    "sx": Object {
                      "px": 4,
                      "py": 4,
                    },
                    "wrap": "wrap",
                    "xl": false,
                    "xs": 12,
                    "zeroMinWidth": false,
                  }
                }
                sx={
                  Object {
                    "px": 4,
                    "py": 4,
                  }
                }
              >
                <div
                  className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-spacing-xs-undefined MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12 lastItem css-11bvc1t-MuiGrid-root"
                >
                  <ForwardRef(Grid)
                    item={true}
                    lg={12}
                    md={12}
                    px={4}
                    py={4}
                    sm={12}
                    textAlign="right"
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12"
                      ownerState={
                        Object {
                          "children": Array [
                            <Button
                              aria-label="cancel"
                              className="mr-4"
                              onClick={[Function]}
                              types="cancel"
                            >
                              buttons.cancel
                            </Button>,
                            <Button
                              aria-label="save"
                              className="mr-4 ml-4 saveProduct"
                              disabled={true}
                              type="submit"
                              types="save"
                            >
                              buttons.save
                            </Button>,
                            <ToastMessage
                              isOpen={false}
                              message=""
                              messageType=""
                              onClose={[Function]}
                            />,
                          ],
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": false,
                          "direction": "row",
                          "item": true,
                          "lg": 12,
                          "md": 12,
                          "rowSpacing": 0,
                          "sm": 12,
                          "sx": Object {
                            "px": 4,
                            "py": 4,
                            "textAlign": "right",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "px": 4,
                          "py": 4,
                          "textAlign": "right",
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12 MuiGrid-grid-lg-12 css-mpnt67-MuiGrid-root"
                      >
                        <Button
                          aria-label="cancel"
                          className="mr-4"
                          onClick={[Function]}
                          types="cancel"
                        >
                          <WithStyles(ForwardRef(Button))
                            aria-label="cancel"
                            className="btn-cancel mr-4"
                            onClick={[Function]}
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              aria-label="cancel"
                              className="btn-cancel mr-4"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              onClick={[Function]}
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="cancel"
                                className="MuiButton-root MuiButton-contained btn-cancel mr-4"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="cancel"
                                  className="MuiButton-root MuiButton-contained btn-cancel mr-4"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    aria-label="cancel"
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained btn-cancel mr-4"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      buttons.cancel
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </Button>
                        <Button
                          aria-label="save"
                          className="mr-4 ml-4 saveProduct"
                          disabled={true}
                          type="submit"
                          types="save"
                        >
                          <WithStyles(ForwardRef(Button))
                            aria-label="save"
                            className="btn-save mr-4 ml-4 saveProduct"
                            disabled={true}
                            type="submit"
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              aria-label="save"
                              className="btn-save mr-4 ml-4 saveProduct"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              disabled={true}
                              type="submit"
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="save"
                                className="MuiButton-root MuiButton-contained btn-save mr-4 ml-4 saveProduct Mui-disabled"
                                component="button"
                                disabled={true}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="submit"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="save"
                                  className="MuiButton-root MuiButton-contained btn-save mr-4 ml-4 saveProduct Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={true}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  type="submit"
                                >
                                  <button
                                    aria-label="save"
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained btn-save mr-4 ml-4 saveProduct Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    type="submit"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      buttons.save
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </Button>
                        <ToastMessage
                          isOpen={false}
                          message=""
                          messageType=""
                          onClose={[Function]}
                        >
                          <div
                            className="toaster_wrapper"
                          >
                            <WithStyles(ForwardRef(Snackbar))
                              autoHideDuration={6000}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Snackbar)
                                autoHideDuration={6000}
                                classes={
                                  Object {
                                    "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
                                    "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
                                    "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
                                    "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
                                    "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
                                    "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
                                    "root": "MuiSnackbar-root",
                                  }
                                }
                                onClose={[Function]}
                                open={false}
                              />
                            </WithStyles(ForwardRef(Snackbar))>
                          </div>
                        </ToastMessage>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </MuiGridRoot>
            </ForwardRef(Grid)>
          </div>
        </MuiGridRoot>
      </ForwardRef(Grid)>
    </form>
  </AddProduct>
   
</QueryClientProvider>
`;
